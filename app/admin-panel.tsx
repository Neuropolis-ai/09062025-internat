import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  Dimensions,
  Alert,
} from 'react-native';
import { Header } from './components/Header';

const { width } = Dimensions.get('window');

interface AdminModule {
  id: string;
  title: string;
  description: string;
  icon: string;
  badge?: number;
}

interface AdminPanelProps {
  onLogout?: () => void;
}

export default function AdminPanel({ onLogout }: AdminPanelProps) {
  const [selectedModule, setSelectedModule] = useState<string | null>(null);

  const adminModules: AdminModule[] = [
    {
      id: 'users',
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
      description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      icon: 'üë•',
      badge: 5,
    },
    {
      id: 'content',
      title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º',
      description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –Ω–æ–≤–æ—Å—Ç–µ–π',
      icon: 'üìù',
      badge: 2,
    },
    {
      id: 'notifications',
      title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
      description: '–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Å–æ–æ–±—â–µ–Ω–∏–π',
      icon: 'üîî',
      badge: 12,
    },
    {
      id: 'analytics',
      title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
      description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é',
      icon: 'üìä',
    },
    {
      id: 'settings',
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã',
      description: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã',
      icon: '‚öôÔ∏è',
    },
    {
      id: 'backup',
      title: '–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π',
      icon: 'üíæ',
    },
  ];

  const handleModulePress = (moduleId: string, title: string) => {
    setSelectedModule(moduleId);
    Alert.alert(
      '–ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–æ–¥—É–ª—å',
      `–û—Ç–∫—Ä—ã—Ç—å –º–æ–¥—É–ª—å "${title}"?`,
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { text: '–û—Ç–∫—Ä—ã—Ç—å', onPress: () => console.log(`–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥—É–ª—è: ${moduleId}`) },
      ]
    );
  };

  const handleLogout = () => {
    Alert.alert(
      '–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏?',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { 
          text: '–í—ã–π—Ç–∏', 
          style: 'destructive', 
          onPress: () => {
            if (onLogout) {
              onLogout();
            } else {
              console.log('–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
            }
          }
        },
      ]
    );
  };

  const renderModuleCard = (module: AdminModule) => (
    <TouchableOpacity
      key={module.id}
      style={[
        styles.moduleCard,
        selectedModule === module.id && styles.moduleCardSelected,
      ]}
      onPress={() => handleModulePress(module.id, module.title)}
      activeOpacity={0.7}
    >
      <View style={styles.moduleHeader}>
        <View style={styles.moduleIconContainer}>
          <Text style={styles.moduleIcon}>{module.icon}</Text>
          {module.badge && (
            <View style={styles.moduleBadge}>
              <Text style={styles.moduleBadgeText}>{module.badge}</Text>
            </View>
          )}
        </View>
      </View>
      
      <View style={styles.moduleContent}>
        <Text style={styles.moduleTitle}>{module.title}</Text>
        <Text style={styles.moduleDescription}>{module.description}</Text>
      </View>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <Header 
        title="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
        showNotificationButton={true}
        showBackButton={false}
        notificationCount={19}
      />
      
      <ScrollView 
        style={styles.scrollContainer}
        contentContainerStyle={styles.contentContainer}
        showsVerticalScrollIndicator={false}
      >
        <View style={styles.welcomeContainer}>
          <Text style={styles.welcomeText}>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤</Text>
          <Text style={styles.adminTitle}>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</Text>
          <Text style={styles.subtitle}>–õ–∏—Ü–µ–π-–∏–Ω—Ç–µ—Ä–Ω–∞—Ç "–ü–æ–¥–º–æ—Å–∫–æ–≤–Ω—ã–π"</Text>
        </View>

        <View style={styles.statsContainer}>
          <View style={styles.statCard}>
            <Text style={styles.statNumber}>1,247</Text>
            <Text style={styles.statLabel}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</Text>
          </View>
          
          <View style={styles.statCard}>
            <Text style={styles.statNumber}>89</Text>
            <Text style={styles.statLabel}>–ê–∫—Ç–∏–≤–Ω—ã—Ö</Text>
          </View>
          
          <View style={styles.statCard}>
            <Text style={styles.statNumber}>24</Text>
            <Text style={styles.statLabel}>–ù–æ–≤—ã—Ö</Text>
          </View>
        </View>

        <View style={styles.modulesContainer}>
          <Text style={styles.sectionTitle}>–ú–æ–¥—É–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</Text>
          
          <View style={styles.modulesGrid}>
            {adminModules.map(renderModuleCard)}
          </View>
        </View>

        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>
          <Text style={styles.logoutButtonText}>–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F2F2F7',
  },
  scrollContainer: {
    flex: 1,
  },
  contentContainer: {
    paddingHorizontal: 20,
    paddingVertical: 24,
  },
  welcomeContainer: {
    alignItems: 'center',
    marginBottom: 32,
    paddingVertical: 16,
  },
  welcomeText: {
    fontSize: 16,
    color: '#666666',
    marginBottom: 4,
  },
  adminTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#8B2439',
    marginBottom: 4,
  },
  subtitle: {
    fontSize: 14,
    color: '#666666',
    fontWeight: '500',
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 32,
  },
  statCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    padding: 16,
    alignItems: 'center',
    flex: 1,
    marginHorizontal: 4,
    shadowColor: '#000000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
    borderWidth: 1,
    borderColor: '#E5E5EA',
  },
  statNumber: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#8B2439',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 12,
    color: '#666666',
    textAlign: 'center',
  },
  modulesContainer: {
    marginBottom: 32,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#8B2439',
    marginBottom: 16,
  },
  modulesGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  moduleCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 16,
    marginBottom: 16,
    width: width > 768 ? '48%' : '100%',
    shadowColor: '#000000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 4,
    borderWidth: 1,
    borderColor: '#E5E5EA',
  },
  moduleCardSelected: {
    borderColor: '#8B2439',
    borderWidth: 2,
  },
  moduleHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  moduleIconContainer: {
    position: 'relative',
    width: 50,
    height: 50,
    backgroundColor: '#F8F8F8',
    borderRadius: 25,
    alignItems: 'center',
    justifyContent: 'center',
  },
  moduleIcon: {
    fontSize: 24,
  },
  moduleBadge: {
    position: 'absolute',
    top: -4,
    right: -4,
    backgroundColor: '#FF4444',
    borderRadius: 10,
    minWidth: 20,
    height: 20,
    alignItems: 'center',
    justifyContent: 'center',
    borderWidth: 2,
    borderColor: '#FFFFFF',
  },
  moduleBadgeText: {
    color: '#FFFFFF',
    fontSize: 10,
    fontWeight: 'bold',
  },
  moduleContent: {
    flex: 1,
  },
  moduleTitle: {
    fontSize: 16,
    fontWeight: '600',
    color: '#8B2439',
    marginBottom: 4,
  },
  moduleDescription: {
    fontSize: 14,
    color: '#666666',
    lineHeight: 20,
  },
  logoutButton: {
    backgroundColor: '#FF4444',
    borderRadius: 12,
    paddingVertical: 16,
    alignItems: 'center',
    marginTop: 16,
    shadowColor: '#FF4444',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 8,
    elevation: 6,
  },
  logoutButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

// –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
const tabletStyles = StyleSheet.create({
  modulesGrid: {
    justifyContent: 'flex-start',
  },
  moduleCard: {
    width: width > 1024 ? '32%' : '48%',
    marginRight: width > 1024 ? '2%' : '4%',
  },
});

// –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
if (width > 768) {
  Object.assign(styles.modulesGrid, tabletStyles.modulesGrid);
  Object.assign(styles.moduleCard, tabletStyles.moduleCard);
} 