const { chromium } = require('playwright');

// –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
async function testStudentsPage() {
    console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...\n');
    
    const browser = await chromium.launch({ headless: false });
    const context = await browser.newContext();
    const page = await context.newPage();
    
    try {
        // 1. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        console.log('üìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ localhost:3000...');
        await page.goto('http://localhost:3000');
        await page.waitForLoadState('networkidle');
        await page.screenshot({ path: 'screenshots/01-homepage.png' });
        console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        
        // 2. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞–ø—Ä—è–º—É—é
        console.log('\nüìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...');
        await page.goto('http://localhost:3000/students');
        await page.waitForTimeout(2000);
        await page.screenshot({ path: 'screenshots/02-students-page.png' });
        
        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const title = await page.textContent('h1, h2, h3').catch(() => null);
        if (title && title.includes('–£—á–µ–Ω–∏–∫–∏')) {
            console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–£—á–µ–Ω–∏–∫–∏" –Ω–∞–π–¥–µ–Ω');
        } else {
            console.log('‚ö†Ô∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–£—á–µ–Ω–∏–∫–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        const table = await page.$('table').catch(() => null);
        if (table) {
            console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫
            const headers = await page.$$eval('th', ths => 
                ths.map(th => th.textContent.trim())
            ).catch(() => []);
            console.log('üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã:', headers);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
            const expectedHeaders = ['–§–∞–º–∏–ª–∏—è –ò–º—è', 'Email', '–ö–ª–∞—Å—Å', '–ö–æ—Ç—Ç–µ–¥–∂', '–¢–æ–∫–µ–Ω—ã', '–î–æ–ª–∂–Ω–æ—Å—Ç–∏', '–°—Ç–∞—Ç—É—Å'];
            const foundHeaders = expectedHeaders.filter(header => 
                headers.some(h => h.includes(header.split(' ')[0]))
            );
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:', foundHeaders);
            
            // –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö
            const rows = await page.$$('tbody tr').catch(() => []);
            console.log(`üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: ${rows.length}`);
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ã, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
            if (rows.length > 0) {
                console.log('\nüñ±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞ –Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞...');
                await rows[0].click();
                await page.waitForTimeout(1000);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = await page.$('.modal, [role="dialog"], .fixed').catch(() => null);
                if (modal) {
                    console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ—Ç–∫—Ä—ã–ª–æ—Å—å');
                    await page.screenshot({ path: 'screenshots/03-student-details-modal.png' });
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
                    const closeButton = await page.$('button:has-text("–ó–∞–∫—Ä—ã—Ç—å"), .close, [aria-label="Close"]').catch(() => null);
                    if (closeButton) {
                        await closeButton.click();
                        console.log('‚úÖ –ú–æ–¥–∞–ª –∑–∞–∫—Ä—ã—Ç');
                    }
                } else {
                    console.log('‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å');
                }
            }
        } else {
            console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞"
        console.log('\n‚ûï –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞...');
        const addButton = await page.$('button:has-text("–î–æ–±–∞–≤–∏—Ç—å")').catch(() => null);
        if (addButton) {
            await addButton.click();
            await page.waitForTimeout(1000);
            
            const addModal = await page.$('.modal, [role="dialog"], .fixed').catch(() => null);
            if (addModal) {
                console.log('‚úÖ –ú–æ–¥–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ—Ç–∫—Ä—ã–ª—Å—è');
                await page.screenshot({ path: 'screenshots/04-add-student-modal.png' });
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
                const formFields = await page.$$eval('input, select', inputs => 
                    inputs.map(input => ({
                        type: input.type,
                        name: input.name || input.id,
                        placeholder: input.placeholder
                    }))
                ).catch(() => []);
                console.log('üìù –ü–æ–ª—è —Ñ–æ—Ä–º—ã:', formFields);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
                const cancelButton = await page.$('button:has-text("–û—Ç–º–µ–Ω")').catch(() => null);
                if (cancelButton) {
                    await cancelButton.click();
                    console.log('‚úÖ –ú–æ–¥–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç');
                }
            } else {
                console.log('‚ö†Ô∏è –ú–æ–¥–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è');
            }
        } else {
            console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫...');
        const consoleLogs = [];
        page.on('console', msg => {
            if (msg.type() === 'error') {
                consoleLogs.push(msg.text());
            }
        });
        
        await page.waitForTimeout(2000);
        
        if (consoleLogs.length > 0) {
            console.log('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏:');
            consoleLogs.forEach(log => console.log('   -', log));
        } else {
            console.log('‚úÖ –û—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
        await page.screenshot({ path: 'screenshots/error.png' });
    } finally {
        await browser.close();
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ screenshots/');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
const fs = require('fs');
if (!fs.existsSync('screenshots')) {
    fs.mkdirSync('screenshots');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testStudentsPage().catch(console.error); 