const { chromium } = require('playwright');

async function testFAQFunctionality() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FAQ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...\n');

  const browser = await chromium.launch({ headless: false });
  const context = await browser.newContext();
  const page = await context.newPage();

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API
    console.log('üì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Backend API...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ FAQ
    const statsResponse = await page.request.get('http://localhost:3001/api/v1/faq/stats');
    if (statsResponse.ok()) {
      const stats = await statsResponse.json();
      console.log('‚úÖ FAQ Stats API —Ä–∞–±–æ—Ç–∞–µ—Ç:', stats);
    } else {
      console.log('‚ùå FAQ Stats API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', statsResponse.status());
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö FAQ
    const faqsResponse = await page.request.get('http://localhost:3001/api/v1/faq');
    let faqs = [];
    if (faqsResponse.ok()) {
      faqs = await faqsResponse.json();
      console.log(`‚úÖ FAQ List API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ: ${faqs.length} –≤–æ–ø—Ä–æ—Å–æ–≤`);
    } else {
      console.log('‚ùå FAQ List API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', faqsResponse.status());
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ FAQ
    const testFaq = {
      question: "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∏—Å—Ç–µ–º–æ–π FAQ?",
      answer: "–°–∏—Å—Ç–µ–º–∞ FAQ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –í—ã –º–æ–∂–µ—Ç–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –∏—Å–∫–∞—Ç—å –ø–æ —Ç–µ–∫—Å—Ç—É.",
      category: "technical",
      sortOrder: 1,
      isActive: true
    };

    console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ FAQ...');
    const createResponse = await page.request.post('http://localhost:3001/api/v1/faq', {
      data: testFaq
    });

    let createdFaq = null;
    if (createResponse.ok()) {
      createdFaq = await createResponse.json();
      console.log('‚úÖ FAQ —Å–æ–∑–¥–∞–Ω:', createdFaq.question);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è FAQ:', createResponse.status());
    }

    // 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Frontend
    console.log('\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Frontend...');
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É FAQ
    await page.goto('http://localhost:3000/faq');
    await page.waitForLoadState('networkidle');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const pageTitle = await page.textContent('h1');
    if (pageTitle?.includes('–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã')) {
      console.log('‚úÖ FAQ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    } else {
      console.log('‚ùå FAQ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    const statsCards = await page.locator('.admin-card').count();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: ${statsCards}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const searchInput = page.locator('[placeholder*="–ü–æ–∏—Å–∫"]');
    const categorySelect = page.locator('select').first();
    
    if (await searchInput.count() > 0) {
      console.log('‚úÖ –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    if (await categorySelect.count() > 0) {
      console.log('‚úÖ –§–∏–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è FAQ
    const addButton = page.locator('button:has-text("–î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å")');
    if (await addButton.count() > 0) {
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è FAQ –Ω–∞–π–¥–µ–Ω–∞');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      await addButton.first().click();
      await page.waitForTimeout(1000);
      
      const modal = page.locator('.fixed.inset-0');
      if (await modal.count() > 0) {
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await page.locator('button:has-text("–û—Ç–º–µ–Ω–∞")').click();
        await page.waitForTimeout(500);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ FAQ –≤ —Å–ø–∏—Å–∫–µ
    const faqItems = await page.locator('[style*="border-color"]').count();
    console.log(`‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–æ FAQ –≤ —Å–ø–∏—Å–∫–µ: ${faqItems}`);

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞
    if (await searchInput.count() > 0) {
      console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞...');
      await searchInput.fill('—Å–∏—Å—Ç–µ–º–∞');
      await page.waitForTimeout(1000);
      
      const filteredItems = await page.locator('[style*="border-color"]').count();
      console.log(`‚úÖ –ü–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ "—Å–∏—Å—Ç–µ–º–∞" –Ω–∞–π–¥–µ–Ω–æ: ${filteredItems} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
      
      // –û—á–∏—â–∞–µ–º –ø–æ–∏—Å–∫
      await searchInput.fill('');
      await page.waitForTimeout(500);
    }

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    if (await categorySelect.count() > 0) {
      console.log('\nüìÇ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...');
      await categorySelect.selectOption('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã');
      await page.waitForTimeout(1000);
      
      const technicalItems = await page.locator('[style*="border-color"]').count();
      console.log(`‚úÖ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞ "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã" –Ω–∞–π–¥–µ–Ω–æ: ${technicalItems} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä
      await categorySelect.selectOption('–í—Å–µ');
      await page.waitForTimeout(500);
    }

    // 3. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (createdFaq && createdFaq.id) {
      console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
      const deleteResponse = await page.request.delete(`http://localhost:3001/api/v1/faq/${createdFaq.id}`);
      
      if (deleteResponse.ok()) {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π FAQ —É–¥–∞–ª–µ–Ω');
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ FAQ');
      }
    }

    // –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ 
      path: 'screenshots/faq-page-test.png', 
      fullPage: true 
    });
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: screenshots/faq-page-test.png');

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FAQ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  } finally {
    await browser.close();
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
async function createTestFAQs() {
  console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö FAQ...\n');
  
  const testFAQs = [
    {
      question: "–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –ª–∏—Ü–µ—è?",
      answer: "–î–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω LINN –∏ –ø–∞—Ä–æ–ª—å, –≤—ã–¥–∞–Ω–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.",
      category: "technical",
      sortOrder: 1,
      isActive: true
    },
    {
      question: "–ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å L-Coin –±–∞–ª–∞–Ω—Å?",
      answer: "L-Coin –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞ —É—á–µ–±–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —É –∫–ª–∞—Å—Å–Ω–æ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è.",
      category: "finance",
      sortOrder: 2,
      isActive: true
    },
    {
      question: "–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏",
      answer: "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞: —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç–∏—à–∏–Ω—ã —Å 22:00 –¥–æ 07:00, –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —á–∏—Å—Ç–æ—Ç—ã, –∑–∞–ø—Ä–µ—Ç –∫—É—Ä–µ–Ω–∏—è –∏ –∞–ª–∫–æ–≥–æ–ª—è, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –¥–µ–∂—É—Ä—Å—Ç–≤–∞—Ö.",
      category: "dormitory",
      sortOrder: 3,
      isActive: true
    },
    {
      question: "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—É—Å–∫?",
      answer: "–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –∏–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞, –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–ø—Ä–∞–≤–∫—É –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–¥–æ—Ä–æ–≤—å—è (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ), –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ –ø—Ä–æ–π–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ —Å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞.",
      category: "academic",
      sortOrder: 4,
      isActive: true
    },
    {
      question: "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π",
      answer: "–°—Ç–æ–ª–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç: –∑–∞–≤—Ç—Ä–∞–∫ 07:30-08:30, –æ–±–µ–¥ 12:00-14:00, —É–∂–∏–Ω 18:00-19:30. –í –≤—ã—Ö–æ–¥–Ω—ã–µ: –∑–∞–≤—Ç—Ä–∞–∫ 08:00-09:00, –æ–±–µ–¥ 13:00-14:30, —É–∂–∏–Ω 18:30-19:30.",
      category: "general",
      sortOrder: 5,
      isActive: true
    }
  ];

  for (let i = 0; i < testFAQs.length; i++) {
    try {
      const response = await fetch('http://localhost:3001/api/v1/faq', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(testFAQs[i])
      });

      if (response.ok) {
        const faq = await response.json();
        console.log(`‚úÖ FAQ ${i + 1} —Å–æ–∑–¥–∞–Ω: ${faq.question}`);
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è FAQ ${i + 1}:`, response.status);
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è FAQ ${i + 1}:`, error.message);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π
if (require.main === module) {
  if (process.argv[2] === 'create-test-data') {
    createTestFAQs().then(() => {
      console.log('\n‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    });
  } else {
    testFAQFunctionality();
  }
}

module.exports = { testFAQFunctionality, createTestFAQs }; 