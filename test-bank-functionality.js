const { chromium } = require('playwright');

async function testBankFunctionality() {
    console.log('üè¶ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–∞–Ω–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º API\n');
    
    const browser = await chromium.launch({ 
        headless: false, 
        slowMo: 500 
    });
    const context = await browser.newContext();
    const page = await context.newPage();
    
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ backend API –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        console.log('üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
        const statsResponse = await fetch('http://localhost:3001/api/v1/transactions/stats');
        const stats = await statsResponse.json();
        console.log(`‚úÖ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç! –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: ${stats.totalTokens}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.totalUsers}`);
        
        const transactionsResponse = await fetch('http://localhost:3001/api/v1/transactions?limit=10');
        const transactions = await transactionsResponse.json();
        console.log(`‚úÖ API —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);
        
        // 2. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–∞–Ω–∫–∞
        console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–∞–Ω–∫–∞...');
        await page.goto('http://localhost:3000/bank');
        await page.waitForLoadState('networkidle');
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        await page.waitForSelector('text=L-Bank', { timeout: 10000 });
        console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–∞–Ω–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        
        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
        console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫...');
        const totalTokensCard = await page.locator('text=–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤').first();
        await totalTokensCard.waitFor({ timeout: 5000 });
        console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ "–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤" –Ω–∞–π–¥–µ–Ω–∞');
        
        const usersCard = await page.locator('text=–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π').first();
        await usersCard.waitFor({ timeout: 5000 });
        console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" –Ω–∞–π–¥–µ–Ω–∞');
        
        const todayTransactionsCard = await page.locator('text=–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è').first();
        await todayTransactionsCard.waitFor({ timeout: 5000 });
        console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è" –Ω–∞–π–¥–µ–Ω–∞');
        
        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
        const transactionsTable = await page.locator('table').first();
        await transactionsTable.waitFor({ timeout: 5000 });
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞–π–¥–µ–Ω–∞');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        const headers = ['–î–∞—Ç–∞', '–¢–∏–ø', '–°—É–º–º–∞', '–û–ø–∏—Å–∞–Ω–∏–µ', '–£—á–∞—Å—Ç–Ω–∏–∫–∏', '–°—Ç–∞—Ç—É—Å'];
        for (const header of headers) {
            const headerElement = await page.locator(`th:has-text("${header}")`).first();
            await headerElement.waitFor({ timeout: 3000 });
            console.log(`‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ "${header}" –Ω–∞–π–¥–µ–Ω`);
        }
        
        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤...');
        const typeFilter = await page.locator('select').first();
        await typeFilter.waitFor({ timeout: 5000 });
        console.log('‚úÖ –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω');
        
        const userFilter = await page.locator('select').nth(1);
        await userFilter.waitFor({ timeout: 5000 });
        console.log('‚úÖ –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–π–¥–µ–Ω');
        
        // 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É
        console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É...');
        await typeFilter.selectOption('CREDIT');
        await page.waitForTimeout(2000); // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        console.log('‚úÖ –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É "CREDIT" –ø—Ä–∏–º–µ–Ω–µ–Ω');
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –æ–±—Ä–∞—Ç–Ω–æ
        await typeFilter.selectOption('all');
        await page.waitForTimeout(2000);
        console.log('‚úÖ –§–∏–ª—å—Ç—Ä —Å–±—Ä–æ—à–µ–Ω');
        
        // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        console.log('‚ûï –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
        const createButton = await page.locator('button:has-text("–°–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")').first();
        await createButton.waitFor({ timeout: 5000 });
        await createButton.click();
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–°–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é" –Ω–∞–∂–∞—Ç–∞');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = await page.locator('text=–°–æ–∑–¥–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é').nth(1); // –í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª–∞
        await modal.waitFor({ timeout: 5000 });
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–æ');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
        const userSelect = await page.locator('select').nth(2); // –¢—Ä–µ—Ç–∏–π select - –≤ –º–æ–¥–∞–ª–µ
        await userSelect.waitFor({ timeout: 3000 });
        console.log('‚úÖ –ü–æ–ª–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω–æ');
        
        const amountInput = await page.locator('input[type="number"]').first();
        await amountInput.waitFor({ timeout: 3000 });
        console.log('‚úÖ –ü–æ–ª–µ —Å—É–º–º—ã –Ω–∞–π–¥–µ–Ω–æ');
        
        const descriptionTextarea = await page.locator('textarea').first();
        await descriptionTextarea.waitFor({ timeout: 3000 });
        console.log('‚úÖ –ü–æ–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–æ');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const closeButton = await page.locator('button:has-text("–û—Ç–º–µ–Ω–∞")').first();
        await closeButton.click();
        await page.waitForTimeout(1000);
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
        
        // 8. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        console.log('üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...');
        await page.screenshot({ 
            path: 'screenshots/bank-page-test.png', 
            fullPage: true 
        });
        console.log('‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: screenshots/bank-page-test.png');
        
        console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –°–¢–†–ê–ù–ò–¶–´ –ë–ê–ù–ö–ê –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
        console.log('üìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ:');
        console.log('  - API —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        console.log('  - –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫');
        console.log('  - –¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏');
        console.log('  - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
        console.log('  - –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
        console.log('  - –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞');
        
    } catch (error) {
        console.error('‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ï:', error.message);
        
        // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏
        try {
            await page.screenshot({ 
                path: 'screenshots/bank-page-error.png', 
                fullPage: true 
            });
            console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: screenshots/bank-page-error.png');
        } catch (screenshotError) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏:', screenshotError.message);
        }
    } finally {
        await browser.close();
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testBankFunctionality().catch(console.error); 