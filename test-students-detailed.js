const { chromium } = require('playwright');

async function testStudentsDetailedFlow() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...\n');
    
    const browser = await chromium.launch({ 
        headless: false, 
        slowMo: 1000 // –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
    });
    const context = await browser.newContext();
    const page = await context.newPage();
    
    try {
        // 1. –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
        console.log('üìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
        await page.goto('http://localhost:3000');
        await page.waitForLoadState('networkidle');
        await page.screenshot({ path: 'screenshots/detailed-01-homepage.png' });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
        const loginForm = await page.$('form').catch(() => null);
        if (loginForm) {
            console.log('üîê –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏...');
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –¥–µ–º–æ-–∫–Ω–æ–ø–∫—É
            const demoButton = await page.$('button:has-text("–î–µ–º–æ"), button:has-text("Demo")').catch(() => null);
            if (demoButton) {
                console.log('üéØ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–µ–º–æ-–≤—Ö–æ–¥–∞...');
                await demoButton.click();
                await page.waitForTimeout(2000);
            } else {
                // –ü–æ–ø—Ä–æ–±—É–µ–º –≤–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                console.log('üìù –í–≤–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞...');
                await page.fill('input[type="email"], input[name="email"]', 'admin@test.com');
                await page.fill('input[type="password"], input[name="password"]', 'password');
                await page.click('button[type="submit"], button:has-text("–í–æ–π—Ç–∏")');
                await page.waitForTimeout(2000);
            }
        }
        
        // 2. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        console.log('\nüìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...');
        await page.goto('http://localhost:3000/students');
        await page.waitForTimeout(3000);
        await page.screenshot({ path: 'screenshots/detailed-02-students-page.png' });
        
        // –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        console.log('\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
        const currentUrl = page.url();
        console.log('üåê –¢–µ–∫—É—â–∏–π URL:', currentUrl);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const title = await page.title();
        console.log('üìÑ Title —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', title);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const elements = {
            sidebar: await page.$('.sidebar, nav, aside').catch(() => null),
            header: await page.$('header, .header').catch(() => null),
            mainContent: await page.$('main, .main, .content').catch(() => null),
            table: await page.$('table').catch(() => null),
            addButton: await page.$('button:has-text("–î–æ–±–∞–≤–∏—Ç—å")').catch(() => null)
        };
        
        console.log('üèóÔ∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:');
        Object.entries(elements).forEach(([key, element]) => {
            console.log(`   ${element ? '‚úÖ' : '‚ùå'} ${key}`);
        });
        
        // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞, –¥–µ—Ç–∞–ª—å–Ω–æ –∏–∑—É—á–∞–µ–º –µ—ë
        if (elements.table) {
            console.log('\nüìä –ê–Ω–∞–ª–∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...');
            
            // –ó–∞–≥–æ–ª–æ–≤–∫–∏
            const headers = await page.$$eval('th', ths => 
                ths.map(th => th.textContent?.trim()).filter(Boolean)
            ).catch(() => []);
            console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫:', headers);
            
            // –°—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            const rows = await page.$$('tbody tr').catch(() => []);
            console.log(`üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${rows.length}`);
            
            if (rows.length > 0) {
                // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                const firstRowData = await page.$$eval('tbody tr:first-child td', tds => 
                    tds.map(td => td.textContent?.trim()).filter(Boolean)
                ).catch(() => []);
                console.log('üìù –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏:', firstRowData);
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                console.log('\nüñ±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞ –ø–æ —Å—Ç—Ä–æ–∫–µ —Å—Ç—É–¥–µ–Ω—Ç–∞...');
                await rows[0].click();
                await page.waitForTimeout(2000);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
                const modals = await page.$$('.modal, [role="dialog"], .fixed').catch(() => []);
                console.log(`ü™ü –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω: ${modals.length}`);
                
                if (modals.length > 0) {
                    await page.screenshot({ path: 'screenshots/detailed-03-student-details.png' });
                    
                    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞
                    const modalContent = await page.textContent('.modal, [role="dialog"], .fixed').catch(() => '');
                    console.log('üìë –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª–∞ –Ω–∞–π–¥–µ–Ω–æ:', modalContent.slice(0, 200) + '...');
                    
                    // –ò—â–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –º–æ–¥–∞–ª–µ
                    const modalButtons = await page.$$eval('.modal button, [role="dialog"] button, .fixed button', 
                        buttons => buttons.map(btn => btn.textContent?.trim()).filter(Boolean)
                    ).catch(() => []);
                    console.log('üîò –ö–Ω–æ–ø–∫–∏ –≤ –º–æ–¥–∞–ª–µ:', modalButtons);
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
                    const closeBtn = await page.$('button:has-text("–ó–∞–∫—Ä—ã—Ç—å"), button:has-text("√ó"), .close').catch(() => null);
                    if (closeBtn) {
                        await closeBtn.click();
                        console.log('‚úÖ –ú–æ–¥–∞–ª –∑–∞–∫—Ä—ã—Ç');
                    }
                }
            }
        } else {
            console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã...');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            const errorMsg = await page.textContent('.error, .alert-error, [role="alert"]').catch(() => null);
            const loadingMsg = await page.textContent('.loading, .spinner').catch(() => null);
            
            if (errorMsg) console.log('‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', errorMsg);
            if (loadingMsg) console.log('‚è≥ –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ:', loadingMsg);
        }
        
        // 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
        if (elements.addButton) {
            console.log('\n‚ûï –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–∞–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞...');
            await elements.addButton.click();
            await page.waitForTimeout(2000);
            await page.screenshot({ path: 'screenshots/detailed-04-add-modal.png' });
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            const testData = {
                firstName: '–¢–µ—Å—Ç–æ–≤—ã–π',
                lastName: '–°—Ç—É–¥–µ–Ω—Ç',
                middleName: '–ò–≤–∞–Ω–æ–≤–∏—á',
                email: `test.${Date.now()}@lyceum.test`
            };
            
            console.log('üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
            for (const [field, value] of Object.entries(testData)) {
                const input = await page.$(`input[name="${field}"]`).catch(() => null);
                if (input) {
                    await input.fill(value);
                    console.log(`   ‚úÖ ${field}: ${value}`);
                }
            }
            
            // –í—ã–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –∏ –∫–æ—Ç—Ç–µ–¥–∂
            const classSelect = await page.$('select[name="class"]').catch(() => null);
            if (classSelect) {
                await classSelect.selectOption('10–ê');
                console.log('   ‚úÖ –ö–ª–∞—Å—Å: 10–ê');
            }
            
            const cottageSelect = await page.$('select[name="cottage"]').catch(() => null);
            if (cottageSelect) {
                await cottageSelect.selectOption('–ê–ª—å—Ñ–∞');
                console.log('   ‚úÖ –ö–æ—Ç—Ç–µ–¥–∂: –ê–ª—å—Ñ–∞');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
            const positionCheckboxes = await page.$$('input[type="checkbox"]').catch(() => []);
            if (positionCheckboxes.length > 0) {
                console.log(`   üìã –ù–∞–π–¥–µ–Ω–æ —á–µ–∫–±–æ–∫—Å–æ–≤: ${positionCheckboxes.length}`);
                // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —á–µ–∫–±–æ–∫—Å
                await positionCheckboxes[0].check();
                console.log('   ‚úÖ –í—ã–±—Ä–∞–Ω–∞ –ø–µ—Ä–≤–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å');
            }
            
            await page.screenshot({ path: 'screenshots/detailed-05-form-filled.png' });
            
            // –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É, —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º
            const cancelBtn = await page.$('button:has-text("–û—Ç–º–µ–Ω")').catch(() => null);
            if (cancelBtn) {
                await cancelBtn.click();
                console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ (—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)');
            }
        }
        
        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        console.log('\nüîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
        
        // –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const consoleLogs = [];
        page.on('console', msg => {
            consoleLogs.push(`${msg.type()}: ${msg.text()}`);
        });
        
        await page.waitForTimeout(3000);
        
        if (consoleLogs.length > 0) {
            console.log('üìú –°–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω—Å–æ–ª–∏:');
            consoleLogs.slice(-5).forEach(log => console.log(`   ${log}`));
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        const performance = await page.evaluate(() => {
            const navigation = performance.getEntriesByType('navigation')[0];
            return {
                loadTime: Math.round(navigation.loadEventEnd - navigation.navigationStart),
                domReady: Math.round(navigation.domContentLoadedEventEnd - navigation.navigationStart)
            };
        });
        
        console.log('‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:');
        console.log(`   üìä –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${performance.loadTime}ms`);
        console.log(`   üèóÔ∏è DOM –≥–æ—Ç–æ–≤: ${performance.domReady}ms`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
        await page.screenshot({ path: 'screenshots/detailed-error.png' });
    } finally {
        await browser.close();
    }
    
    console.log('\nüéâ –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üì∏ –í—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ screenshots/');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
const fs = require('fs');
if (!fs.existsSync('screenshots')) {
    fs.mkdirSync('screenshots');
}

// –ó–∞–ø—É—Å–∫ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testStudentsDetailedFlow().catch(console.error); 