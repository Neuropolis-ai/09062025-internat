const baseUrl = 'http://localhost:3001/api/v1';

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  reset: '\x1b[0m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

async function testAPI(endpoint, description) {
  try {
    const response = await fetch(`${baseUrl}${endpoint}`);
    const data = await response.json();
    
    if (response.ok) {
      log(`‚úÖ ${description}`, 'green');
      console.log('   ', JSON.stringify(data, null, 2).slice(0, 200) + '...');
      return data;
    } else {
      log(`‚ùå ${description} - ${response.status}`, 'red');
      console.log('   ', data);
      return null;
    }
  } catch (error) {
    log(`‚ùå ${description} - ${error.message}`, 'red');
    return null;
  }
}

async function testAdminPanel() {
  log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –ª–∏—Ü–µ—è', 'blue');
  console.log('');

  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
  log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã', 'yellow');
  await testAPI('/health', 'Health Check');
  console.log('');

  // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'yellow');
  const users = await testAPI('/users', '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
  if (users) {
    const students = users.filter(user => user.role === 'STUDENT');
    const admins = users.filter(user => user.role === 'ADMIN');
    log(`   –ù–∞–π–¥–µ–Ω–æ: ${students.length} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, ${admins.length} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤`, 'blue');
  }
  console.log('');

  // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  log('3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (L-shop)', 'yellow');
  await testAPI('/products', '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
  console.log('');

  // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–∫—Ü–∏–æ–Ω–æ–≤
  log('4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞—É–∫—Ü–∏–æ–Ω–æ–≤', 'yellow');
  await testAPI('/auctions', '–ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–∫—Ü–∏–æ–Ω–æ–≤');
  console.log('');

  // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
  log('5. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤', 'yellow');
  await testAPI('/contracts', '–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤');
  console.log('');

  // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —á–∞—Ç–∞
  log('6. –ü—Ä–æ–≤–µ—Ä–∫–∞ AI —á–∞—Ç–∞', 'yellow');
  await testAPI('/chat/status', '–°—Ç–∞—Ç—É—Å AI —á–∞—Ç–∞');
  console.log('');

  // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Ñ–∞–π–ª–æ–≤
  log('7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Ñ–∞–π–ª–æ–≤', 'yellow');
  try {
    const response = await fetch(`${baseUrl}/storage/test`);
    if (response.status === 404) {
      log('‚úÖ Storage endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (404 –æ–∂–∏–¥–∞–µ–º–æ)', 'green');
    } else {
      const data = await response.json();
      log('‚úÖ Storage API —Ä–∞–±–æ—Ç–∞–µ—Ç', 'green');
      console.log('   ', data);
    }
  } catch (error) {
    log(`‚ùå Storage API - ${error.message}`, 'red');
  }
  console.log('');

  log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!', 'green');
  console.log('');
  log('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:', 'blue');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
  console.log('2. –í–æ–π–¥–∏—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏: admin@lyceum.ru / admin123');
  console.log('3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3001/api/docs –¥–ª—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
  console.log('5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testAdminPanel().catch(console.error); 