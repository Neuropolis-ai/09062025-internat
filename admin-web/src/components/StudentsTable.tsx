'use client';

import React from 'react';

interface Student {
  id: number;
  fullName: string;
  class: string;
  cottage: string;
  linn: string;
  tokens: number;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–æ–≤
const mockStudents: Student[] = [
  {
    id: 1,
    fullName: "–ò–≤–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤–∏—á",
    class: "10–ê",
    cottage: "–ê–ª—å—Ñ–∞",
    linn: "L001247",
    tokens: 1250
  },
  {
    id: 2,
    fullName: "–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
    class: "9–ë",
    cottage: "–ë–µ—Ç–∞",
    linn: "L002156",
    tokens: 980
  },
  {
    id: 3,
    fullName: "–°–∏–¥–æ—Ä–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    class: "11–í",
    cottage: "–ì–∞–º–º–∞",
    linn: "L003089",
    tokens: 1750
  },
  {
    id: 4,
    fullName: "–ö–æ–∑–ª–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞",
    class: "10–ë",
    cottage: "–î–µ–ª—å—Ç–∞",
    linn: "L004123",
    tokens: 1100
  },
  {
    id: 5,
    fullName: "–ú–æ—Ä–æ–∑–æ–≤ –ê—Ä—Ç–µ–º –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
    class: "9–ê",
    cottage: "–ê–ª—å—Ñ–∞",
    linn: "L005067",
    tokens: 890
  }
];

export default function StudentsTable() {
  const handleEdit = (student: Student) => {
    // TODO: –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞: ${student.fullName}`);
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞:', student);
  };

  const handleDelete = (student: Student) => {
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–∞ ${student.fullName}?`)) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
      alert(`–£—á–µ–Ω–∏–∫ ${student.fullName} —É–¥–∞–ª–µ–Ω`);
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞:', student);
    }
  };

  const handleTokens = (student: Student) => {
    // TODO: –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏
    const action = prompt(`–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏ –¥–ª—è ${student.fullName}\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${student.tokens} —Ç–æ–∫–µ–Ω–æ–≤\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è (+) –∏–ª–∏ —Å–ø–∏—Å–∞–Ω–∏—è (-):`, '0');
    
    if (action !== null && action !== '') {
      const amount = parseInt(action);
      if (!isNaN(amount)) {
        const newBalance = student.tokens + amount;
        if (newBalance >= 0) {
          alert(`–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${newBalance} —Ç–æ–∫–µ–Ω–æ–≤`);
          console.log('–û–ø–µ—Ä–∞—Ü–∏—è —Å —Ç–æ–∫–µ–Ω–∞–º–∏:', { student, amount, newBalance });
        } else {
          alert('–û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è');
        }
      } else {
        alert('–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ');
      }
    }
  };

  return (
    <div className="overflow-hidden">
      <div className="overflow-x-auto">
        <table className="min-w-full divide-y admin-border" style={{ borderColor: 'var(--divider)' }}>
          <thead style={{ backgroundColor: 'var(--background-light)' }}>
            <tr>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                –§–∞–º–∏–ª–∏—è –ò–º—è
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                –ö–ª–∞—Å—Å
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                –ö–æ—Ç—Ç–µ–¥–∂
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                LINN
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                –¢–æ–∫–µ–Ω—ã (—Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç)
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                –î–µ–π—Å—Ç–≤–∏—è
              </th>
            </tr>
          </thead>
          <tbody className="admin-card divide-y" style={{ borderColor: 'var(--divider)' }}>
            {mockStudents.map((student, index) => (
              <tr 
                key={student.id}
                className={`hover:bg-gray-50 transition-colors ${
                  index % 2 === 0 ? 'bg-white' : 'bg-gray-50/30'
                }`}
              >
                <td className="px-6 py-4 whitespace-nowrap">
                  <div className="flex items-center">
                    <div className="flex-shrink-0 h-8 w-8">
                      <div 
                        className="h-8 w-8 rounded-full flex items-center justify-center text-white text-sm font-medium"
                        style={{ backgroundColor: 'var(--primary-burgundy)' }}
                      >
                        {student.fullName.split(' ')[0][0]}{student.fullName.split(' ')[1][0]}
                      </div>
                    </div>
                    <div className="ml-4">
                      <div className="text-sm font-medium text-gray-900">
                        {student.fullName}
                      </div>
                    </div>
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-white"
                        style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                    {student.class}
                  </span>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {student.cottage}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm font-mono admin-text-secondary">
                  {student.linn}
                </td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <div className="flex items-center">
                    <span className="text-sm font-medium text-gray-900">
                      {student.tokens}
                    </span>
                    <span className="ml-1 text-xs admin-text-secondary">—Ç–æ–∫–µ–Ω–æ–≤</span>
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => handleEdit(student)}
                      className="text-gray-400 hover:text-gray-600 transition-colors"
                      title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                    >
                      <span className="text-lg">‚úèÔ∏è</span>
                    </button>
                    <button
                      onClick={() => handleDelete(student)}
                      className="text-gray-400 hover:text-red-600 transition-colors"
                      title="–£–¥–∞–ª–∏—Ç—å"
                    >
                      <span className="text-lg">üóëÔ∏è</span>
                    </button>
                    <button
                      onClick={() => handleTokens(student)}
                      className="text-gray-400 hover:text-green-600 transition-colors"
                      title="–ù–∞—á–∏—Å–ª–∏—Ç—å/–°–Ω—è—Ç—å —Ç–æ–∫–µ–Ω—ã"
                    >
                      <span className="text-lg">üí∞</span>
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–ø–∏—Å–µ–π */}
      <div className="admin-border px-6 py-3 flex items-center justify-between" 
           style={{ borderTopColor: 'var(--divider)', borderTopWidth: '1px' }}>
        <div className="text-sm admin-text-secondary">
          –ü–æ–∫–∞–∑–∞–Ω–æ {mockStudents.length} –∏–∑ {mockStudents.length} —É—á–µ–Ω–∏–∫–æ–≤
        </div>
        <div className="flex items-center space-x-2">
          <button className="px-3 py-1 text-sm admin-text-secondary hover:text-gray-900 transition-colors">
            –ü—Ä–µ–¥—ã–¥—É—â–∞—è
          </button>
          <span className="px-3 py-1 text-sm bg-gray-100 rounded">1</span>
          <button className="px-3 py-1 text-sm admin-text-secondary hover:text-gray-900 transition-colors">
            –°–ª–µ–¥—É—é—â–∞—è
          </button>
        </div>
      </div>
    </div>
  );
} 