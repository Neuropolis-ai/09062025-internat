'use client';

import React, { useState } from 'react';
import Sidebar from '../../components/Sidebar';
import NotificationModal from '../../components/NotificationModal';

interface Notification {
  id: string;
  title: string;
  message: string;
  type: 'info' | 'warning' | 'success' | 'error';
  target: 'all' | 'students' | 'teachers' | 'parents' | 'specific';
  targetDetails?: string;
  isActive: boolean;
  isImportant: boolean;
  createdAt: string;
  expiresAt?: string;
  createdBy: string;
  readCount: number;
  totalRecipients: number;
}

interface NotificationFormData {
  title: string;
  message: string;
  type: 'info' | 'warning' | 'success' | 'error';
  target: 'all' | 'students' | 'teachers' | 'parents' | 'specific';
  targetDetails?: string;
  isImportant: boolean;
  expiresAt?: string;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const mockNotifications: Notification[] = [
  {
    id: '1',
    title: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è',
    message: '–£–≤–∞–∂–∞–µ–º—ã–µ —É—á–µ–Ω–∏–∫–∏! –í —Å–≤—è–∑–∏ —Å —Ä–µ–º–æ–Ω—Ç–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏ –∑–∞–Ω—è—Ç–∏—è –≤ –∫–∞–±–∏–Ω–µ—Ç–µ 205 –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç 301.',
    type: 'warning',
    target: 'students',
    isActive: true,
    isImportant: true,
    createdAt: '2024-01-20 09:00',
    expiresAt: '2024-01-25 18:00',
    createdBy: '–ò–≤–∞–Ω–æ–≤–∞ –ï.–ü.',
    readCount: 156,
    totalRecipients: 247
  },
  {
    id: '2',
    title: '–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ L-Coin',
    message: '–ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ –∑–∞–ø—É—Å–∫–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —à–∫–æ–ª—å–Ω–æ–π –≤–∞–ª—é—Ç—ã. –í—Å–µ —É—á–µ–Ω–∏–∫–∏ –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å 100 L-Coin.',
    type: 'success',
    target: 'all',
    isActive: true,
    isImportant: false,
    createdAt: '2024-01-18 14:30',
    createdBy: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',
    readCount: 402,
    totalRecipients: 520
  },
  {
    id: '3',
    title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
    message: '–í –Ω–æ—á—å —Å 22 –Ω–∞ 23 —è–Ω–≤–∞—Ä—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã. –í–æ–∑–º–æ–∂–Ω—ã –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ.',
    type: 'info',
    target: 'all',
    isActive: true,
    isImportant: false,
    createdAt: '2024-01-19 16:45',
    expiresAt: '2024-01-23 08:00',
    createdBy: 'IT-–æ—Ç–¥–µ–ª',
    readCount: 298,
    totalRecipients: 520
  },
  {
    id: '4',
    title: '–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ 10–ê',
    message: '–£–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏ —É—á–µ–Ω–∏–∫–æ–≤ 10–ê –∫–ª–∞—Å—Å–∞! –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ 25 —è–Ω–≤–∞—Ä—è –≤ 18:00.',
    type: 'info',
    target: 'specific',
    targetDetails: '–†–æ–¥–∏—Ç–µ–ª–∏ 10–ê –∫–ª–∞—Å—Å–∞',
    isActive: true,
    isImportant: true,
    createdAt: '2024-01-17 12:20',
    expiresAt: '2024-01-25 20:00',
    createdBy: '–ü–µ—Ç—Ä–æ–≤–∞ –ú.–ê.',
    readCount: 18,
    totalRecipients: 25
  },
  {
    id: '5',
    title: '–û—Ç–º–µ–Ω–∞ –∫—Ä—É–∂–∫–∞ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏',
    message: '–ó–∞–Ω—è—Ç–∏–µ –∫—Ä—É–∂–∫–∞ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏ –Ω–∞ 21 —è–Ω–≤–∞—Ä—è –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è –ø–æ –ø—Ä–∏—á–∏–Ω–µ –±–æ–ª–µ–∑–Ω–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.',
    type: 'error',
    target: 'specific',
    targetDetails: '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫—Ä—É–∂–∫–∞ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∏',
    isActive: false,
    isImportant: false,
    createdAt: '2024-01-20 15:30',
    expiresAt: '2024-01-21 18:00',
    createdBy: '–°–º–∏—Ä–Ω–æ–≤ –ê.–í.',
    readCount: 12,
    totalRecipients: 15
  }
];

const typeFilters = ["–í—Å–µ", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–£—Å–ø–µ—Ö", "–û—à–∏–±–∫–∞"];
const targetFilters = ["–í—Å–µ", "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "–£—á–µ–Ω–∏–∫–∏", "–£—á–∏—Ç–µ–ª—è", "–†–æ–¥–∏—Ç–µ–ª–∏", "–í—ã–±–æ—Ä–æ—á–Ω–æ"];
const statusFilters = ["–í—Å–µ", "–ê–∫—Ç–∏–≤–Ω—ã–µ", "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ", "–í–∞–∂–Ω—ã–µ"];

export default function NotificationsPage() {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedType, setSelectedType] = useState("–í—Å–µ");
  const [selectedTarget, setSelectedTarget] = useState("–í—Å–µ");
  const [selectedStatus, setSelectedStatus] = useState("–í—Å–µ");
  const [notificationModalOpen, setNotificationModalOpen] = useState(false);
  const [editingNotification, setEditingNotification] = useState<Notification | null>(null);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalNotifications = mockNotifications.length;
  const activeNotifications = mockNotifications.filter(n => n.isActive).length;
  const importantNotifications = mockNotifications.filter(n => n.isImportant).length;
  const totalReads = mockNotifications.reduce((sum, n) => sum + n.readCount, 0);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const filteredNotifications = mockNotifications.filter(notification => {
    const matchesSearch = notification.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         notification.message.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesType = selectedType === "–í—Å–µ" ||
      (selectedType === "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" && notification.type === "info") ||
      (selectedType === "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ" && notification.type === "warning") ||
      (selectedType === "–£—Å–ø–µ—Ö" && notification.type === "success") ||
      (selectedType === "–û—à–∏–±–∫–∞" && notification.type === "error");
    const matchesTarget = selectedTarget === "–í—Å–µ" ||
      (selectedTarget === "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" && notification.target === "all") ||
      (selectedTarget === "–£—á–µ–Ω–∏–∫–∏" && notification.target === "students") ||
      (selectedTarget === "–£—á–∏—Ç–µ–ª—è" && notification.target === "teachers") ||
      (selectedTarget === "–†–æ–¥–∏—Ç–µ–ª–∏" && notification.target === "parents") ||
      (selectedTarget === "–í—ã–±–æ—Ä–æ—á–Ω–æ" && notification.target === "specific");
    const matchesStatus = selectedStatus === "–í—Å–µ" ||
      (selectedStatus === "–ê–∫—Ç–∏–≤–Ω—ã–µ" && notification.isActive) ||
      (selectedStatus === "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ" && !notification.isActive) ||
      (selectedStatus === "–í–∞–∂–Ω—ã–µ" && notification.isImportant);
    return matchesSearch && matchesType && matchesTarget && matchesStatus;
  });

  const getTypeText = (type: string) => {
    switch (type) {
      case 'info': return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è';
      case 'warning': return '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ';
      case 'success': return '–£—Å–ø–µ—Ö';
      case 'error': return '–û—à–∏–±–∫–∞';
      default: return type;
    }
  };

  const getTypeColor = (type: string) => {
    switch (type) {
      case 'info': return 'bg-blue-100 text-blue-800';
      case 'warning': return 'bg-yellow-100 text-yellow-800';
      case 'success': return 'bg-green-100 text-green-800';
      case 'error': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getTargetText = (target: string, targetDetails?: string) => {
    switch (target) {
      case 'all': return '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏';
      case 'students': return '–£—á–µ–Ω–∏–∫–∏';
      case 'teachers': return '–£—á–∏—Ç–µ–ª—è';
      case 'parents': return '–†–æ–¥–∏—Ç–µ–ª–∏';
      case 'specific': return targetDetails || '–í—ã–±–æ—Ä–æ—á–Ω–æ';
      default: return target;
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'info': return '‚ÑπÔ∏è';
      case 'warning': return '‚ö†Ô∏è';
      case 'success': return '‚úÖ';
      case 'error': return '‚ùå';
      default: return 'üì¢';
    }
  };

  const formatDateTime = (dateTime: string) => {
    return new Date(dateTime).toLocaleDateString('ru-RU');
  };

  const getReadPercentage = (readCount: number, totalRecipients: number) => {
    return Math.round((readCount / totalRecipients) * 100);
  };

  const handleEditNotification = (notification: Notification) => {
    setEditingNotification(notification);
    setNotificationModalOpen(true);
  };

  const handleDeleteNotification = (notification: Notification) => {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${notification.title}"?`)) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notification);
      alert(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${notification.title}" —É–¥–∞–ª–µ–Ω–æ`);
    }
  };

  const handleToggleActive = (notification: Notification) => {
    // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notification);
    alert(`–°—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è "${notification.title}" –∏–∑–º–µ–Ω–µ–Ω`);
  };

  const handleAddNotification = () => {
    setEditingNotification(null);
    setNotificationModalOpen(true);
  };

  const handleSaveNotification = (notificationData: NotificationFormData) => {
    if (editingNotification) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', { ...editingNotification, ...notificationData });
      alert(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${notificationData.title}" –æ–±–Ω–æ–≤–ª–µ–Ω–æ!`);
    } else {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      console.log('–°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationData);
      alert(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${notificationData.title}" —Å–æ–∑–¥–∞–Ω–æ!`);
    }
  };

  const handleCloseModal = () => {
    setNotificationModalOpen(false);
    setEditingNotification(null);
  };

  return (
    <div className="min-h-screen admin-container flex">
      {/* Sidebar */}
      <Sidebar isOpen={sidebarOpen} onClose={() => setSidebarOpen(false)} />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col lg:ml-0">
        {/* Header */}
        <header className="shadow" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
          <div className="px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-8">
              <div className="flex items-center">
                {/* –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
                <button
                  onClick={() => setSidebarOpen(true)}
                  className="lg:hidden p-2 rounded-md text-white hover:bg-white/20 mr-4"
                >
                  <span className="text-xl">‚ò∞</span>
                </button>
                
                <div>
                  <h1 className="text-2xl font-bold text-white">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h1>
                  <p className="text-white/90 font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-4">
                <button
                  onClick={handleAddNotification}
                  className="admin-button-primary text-white px-4 py-2 rounded-md transition-colors"
                  style={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.2)',
                    border: '1px solid rgba(255, 255, 255, 0.3)'
                  }}
                  onMouseOver={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.3)'}
                  onMouseOut={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.2)'}
                >
                  –°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                </button>
              </div>
            </div>
          </div>
        </header>

        {/* Main content */}
        <main className="flex-1 px-4 py-6 sm:px-6 lg:px-8">
          <div className="max-w-7xl mx-auto">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üì¢</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í—Å–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</dt>
                        <dd className="text-lg font-medium text-gray-900">{totalNotifications}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üü¢</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–ê–∫—Ç–∏–≤–Ω—ã—Ö</dt>
                        <dd className="text-lg font-medium text-gray-900">{activeNotifications}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">‚≠ê</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í–∞–∂–Ω—ã—Ö</dt>
                        <dd className="text-lg font-medium text-gray-900">{importantNotifications}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üëÅÔ∏è</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í—Å–µ–≥–æ –ø—Ä–æ—á—Ç–µ–Ω–∏–π</dt>
                        <dd className="text-lg font-medium text-gray-900">{totalReads}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
            <div className="admin-card mb-6">
              <div className="px-4 py-5 sm:p-6">
                <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ü–æ–∏—Å–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    </label>
                    <input
                      type="text"
                      className="admin-input w-full"
                      placeholder="–ü–æ–∏—Å–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É –∏–ª–∏ —Ç–µ–∫—Å—Ç—É..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –¢–∏–ø
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedType}
                      onChange={(e) => setSelectedType(e.target.value)}
                    >
                      {typeFilters.map(type => (
                        <option key={type} value={type}>{type}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ê–¥—Ä–µ—Å–∞—Ç
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedTarget}
                      onChange={(e) => setSelectedTarget(e.target.value)}
                    >
                      {targetFilters.map(target => (
                        <option key={target} value={target}>{target}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –°—Ç–∞—Ç—É—Å
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedStatus}
                      onChange={(e) => setSelectedStatus(e.target.value)}
                    >
                      {statusFilters.map(status => (
                        <option key={status} value={status}>{status}</option>
                      ))}
                    </select>
                  </div>
                </div>
              </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
            <div className="admin-card">
              <div className="px-4 py-5 sm:p-6">
                <div className="sm:flex sm:items-center sm:justify-between mb-6">
                  <div>
                    <h3 className="text-lg leading-6 font-medium text-gray-900">
                      –°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    </h3>
                    <p className="mt-1 max-w-2xl text-sm admin-text-secondary">
                      –ù–∞–π–¥–µ–Ω–æ: {filteredNotifications.length} –∏–∑ {totalNotifications} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    </p>
                  </div>
                  <div className="mt-4 sm:mt-0">
                    <button
                      onClick={handleAddNotification}
                      className="admin-button-primary inline-flex items-center px-4 py-2 text-sm font-medium rounded-md"
                      style={{ backgroundColor: 'var(--primary-burgundy)' }}
                    >
                      <span className="mr-2">üì¢</span>
                      –°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    </button>
                  </div>
                </div>

                {filteredNotifications.length === 0 ? (
                  <div className="text-center py-12">
                    <div className="w-12 h-12 mx-auto mb-4 rounded-full flex items-center justify-center" style={{ backgroundColor: 'var(--background-gray)' }}>
                      <span className="text-2xl">üì¢</span>
                    </div>
                    <h3 className="text-lg font-medium text-gray-900 mb-2">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p className="admin-text-secondary">
                      –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
                    </p>
                  </div>
                ) : (
                  <div className="space-y-4">
                    {filteredNotifications.map((notification) => (
                      <div
                        key={notification.id}
                        className={`border rounded-lg p-4 ${notification.isImportant ? 'border-red-300 bg-red-50' : ''}`}
                        style={{ borderColor: notification.isImportant ? '#fca5a5' : 'var(--divider)' }}
                      >
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <div className="flex items-center space-x-3 mb-2">
                              <span className="text-xl">{getTypeIcon(notification.type)}</span>
                              <h4 className="text-lg font-medium text-gray-900">
                                {notification.title}
                                {notification.isImportant && <span className="ml-2 text-red-600">‚≠ê</span>}
                              </h4>
                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getTypeColor(notification.type)}`}>
                                {getTypeText(notification.type)}
                              </span>
                              {notification.isActive ? (
                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                  –ê–∫—Ç–∏–≤–Ω–æ
                                </span>
                              ) : (
                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                  –ù–µ–∞–∫—Ç–∏–≤–Ω–æ
                                </span>
                              )}
                            </div>
                            
                            <p className="text-sm admin-text-secondary mb-3 line-clamp-2">
                              {notification.message}
                            </p>

                            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm admin-text-secondary">
                              <div>
                                <span className="font-medium">–ê–¥—Ä–µ—Å–∞—Ç:</span>
                                <div>{getTargetText(notification.target, notification.targetDetails)}</div>
                              </div>
                              <div>
                                <span className="font-medium">–ü—Ä–æ—á–∏—Ç–∞–Ω–æ:</span>
                                <div>{notification.readCount} –∏–∑ {notification.totalRecipients} ({getReadPercentage(notification.readCount, notification.totalRecipients)}%)</div>
                              </div>
                              <div>
                                <span className="font-medium">–°–æ–∑–¥–∞–Ω–æ:</span>
                                <div>{formatDateTime(notification.createdAt)}</div>
                              </div>
                              <div>
                                <span className="font-medium">–ê–≤—Ç–æ—Ä:</span>
                                <div>{notification.createdBy}</div>
                              </div>
                            </div>

                            {notification.expiresAt && (
                              <div className="mt-2 text-sm admin-text-secondary">
                                <span className="font-medium">–ò—Å—Ç–µ–∫–∞–µ—Ç:</span> {formatDateTime(notification.expiresAt)}
                              </div>
                            )}
                          </div>

                          <div className="flex items-center space-x-2 ml-4">
                            <button
                              onClick={() => handleToggleActive(notification)}
                              className={`p-2 rounded ${
                                notification.isActive 
                                  ? 'text-red-600 hover:bg-red-50' 
                                  : 'text-green-600 hover:bg-green-50'
                              }`}
                              title={notification.isActive ? '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                            >
                              {notification.isActive ? 'üî¥' : 'üü¢'}
                            </button>
                            <button
                              onClick={() => handleEditNotification(notification)}
                              className="p-2 text-blue-600 hover:bg-blue-50 rounded"
                              title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                            >
                              ‚úèÔ∏è
                            </button>
                            <button
                              onClick={() => handleDeleteNotification(notification)}
                              className="p-2 text-red-600 hover:bg-red-50 rounded"
                              title="–£–¥–∞–ª–∏—Ç—å"
                            >
                              üóëÔ∏è
                            </button>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
        </main>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      <NotificationModal 
        isOpen={notificationModalOpen}
        onClose={handleCloseModal}
        notification={editingNotification}
        onSave={handleSaveNotification}
      />
    </div>
  );
} 