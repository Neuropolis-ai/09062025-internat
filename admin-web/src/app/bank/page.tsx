'use client';

import React, { useState } from 'react';
import Sidebar from '../../components/Sidebar';
import TransactionModal from '../../components/TransactionModal';

interface Transaction {
  id: number;
  studentName: string;
  type: 'credit' | 'debit';
  amount: number;
  description: string;
  date: string;
  balance: number;
}

interface TransactionFormData {
  studentName: string;
  type: 'credit' | 'debit';
  amount: number;
  description: string;
  category: string;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
const mockTransactions: Transaction[] = [
  {
    id: 1,
    studentName: "–ò–≤–∞–Ω–æ–≤ –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤–∏—á",
    type: 'credit',
    amount: 500,
    description: "–ü–æ–æ—â—Ä–µ–Ω–∏–µ –∑–∞ –æ—Ç–ª–∏—á–Ω—É—é —É—á–µ–±—É",
    date: "2024-12-09",
    balance: 1250
  },
  {
    id: 2,
    studentName: "–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
    type: 'debit',
    amount: 200,
    description: "–ü–æ–∫—É–ø–∫–∞ –≤ L-shop",
    date: "2024-12-08",
    balance: 980
  },
  {
    id: 3,
    studentName: "–°–∏–¥–æ—Ä–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    type: 'credit',
    amount: 750,
    description: "–ü–æ–±–µ–¥–∞ –≤ –æ–ª–∏–º–ø–∏–∞–¥–µ",
    date: "2024-12-07",
    balance: 1750
  },
  {
    id: 4,
    studentName: "–ö–æ–∑–ª–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞",
    type: 'debit',
    amount: 150,
    description: "–û–ø–ª–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
    date: "2024-12-06",
    balance: 1100
  },
  {
    id: 5,
    studentName: "–ú–æ—Ä–æ–∑–æ–≤ –ê—Ä—Ç–µ–º –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
    type: 'credit',
    amount: 300,
    description: "–£—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ",
    date: "2024-12-05",
    balance: 890
  }
];

export default function BankPage() {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [selectedPeriod, setSelectedPeriod] = useState('week');
  const [transactionModalOpen, setTransactionModalOpen] = useState(false);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
  const totalTokens = 125450;
  const todayTransactions = 8;
  const weeklyIncome = 3250;
  const weeklyExpense = 1890;

  const handleNewTransaction = (transactionData: TransactionFormData) => {
    // TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('–ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:', transactionData);
    alert(`–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞!\n${transactionData.type === 'credit' ? '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' : '–°–ø–∏—Å–∞–Ω–∏–µ'} ${transactionData.amount} —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è ${transactionData.studentName}`);
  };

  return (
    <div className="min-h-screen admin-container flex">
      {/* Sidebar */}
      <Sidebar isOpen={sidebarOpen} onClose={() => setSidebarOpen(false)} />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col lg:ml-0">
        {/* Header */}
        <header className="admin-card shadow" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
          <div className="px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-6">
              <div className="flex items-center">
                {/* –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
                <button
                  onClick={() => setSidebarOpen(true)}
                  className="lg:hidden p-2 rounded-md text-white hover:bg-white/20 mr-4"
                >
                  <span className="text-xl">‚ò∞</span>
                </button>
                
                <div>
                  <h1 className="text-2xl font-bold text-white">–õ–∏—Ü–µ–π—Å–∫–∏–π –±–∞–Ω–∫</h1>
                  <p className="text-white/90 font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-4">
                <button
                  onClick={() => setTransactionModalOpen(true)}
                  className="admin-button-primary text-white px-4 py-2 rounded-md transition-colors"
                  style={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.2)',
                    border: '1px solid rgba(255, 255, 255, 0.3)'
                  }}
                  onMouseOver={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.3)'}
                  onMouseOut={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.2)'}
                >
                  –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
                </button>
              </div>
            </div>
          </div>
        </header>

        {/* Main content */}
        <main className="flex-1 px-4 py-6 sm:px-6 lg:px-8">
          <div className="max-w-7xl mx-auto space-y-6">
            
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="admin-card">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" 
                           style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üí∞</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤</dt>
                        <dd className="text-lg font-medium text-gray-900">{totalTokens.toLocaleString()}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center"
                           style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üìä</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è</dt>
                        <dd className="text-lg font-medium text-gray-900">{todayTransactions}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center"
                           style={{ backgroundColor: '#10B981' }}>
                        <span className="text-white font-bold">‚ÜóÔ∏è</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–î–æ—Ö–æ–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é</dt>
                        <dd className="text-lg font-medium text-gray-900">+{weeklyIncome.toLocaleString()}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="p-5">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center"
                           style={{ backgroundColor: '#EF4444' }}>
                        <span className="text-white font-bold">‚ÜòÔ∏è</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–†–∞—Å—Ö–æ–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é</dt>
                        <dd className="text-lg font-medium text-gray-900">-{weeklyExpense.toLocaleString()}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
            <div className="admin-card">
              <div className="px-4 py-5 sm:p-6">
                <div className="sm:flex sm:items-center sm:justify-between mb-6">
                  <div>
                    <h3 className="text-lg leading-6 font-medium text-gray-900">
                      –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
                    </h3>
                    <p className="mt-1 max-w-2xl text-sm admin-text-secondary">
                      –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –≤ –ª–∏—Ü–µ–π—Å–∫–æ–º –±–∞–Ω–∫–µ
                    </p>
                  </div>
                  <div className="mt-4 sm:mt-0 flex items-center space-x-3">
                    <select
                      value={selectedPeriod}
                      onChange={(e) => setSelectedPeriod(e.target.value)}
                      className="admin-input text-sm"
                    >
                      <option value="day">–ó–∞ –¥–µ–Ω—å</option>
                      <option value="week">–ó–∞ –Ω–µ–¥–µ–ª—é</option>
                      <option value="month">–ó–∞ –º–µ—Å—è—Ü</option>
                      <option value="all">–í—Å–µ –≤—Ä–µ–º—è</option>
                    </select>
                    <button
                      type="button"
                      onClick={() => setTransactionModalOpen(true)}
                      className="admin-button-primary inline-flex items-center px-4 py-2 text-sm font-medium rounded-md"
                      style={{ backgroundColor: 'var(--primary-burgundy)' }}
                    >
                      <span className="mr-2">üí∞</span>
                      –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
                    </button>
                  </div>
                </div>
                
                {/* –¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π */}
                <div className="overflow-hidden">
                  <div className="overflow-x-auto">
                    <table className="min-w-full divide-y admin-border" style={{ borderColor: 'var(--divider)' }}>
                      <thead style={{ backgroundColor: 'var(--background-light)' }}>
                        <tr>
                          <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                            –î–∞—Ç–∞
                          </th>
                          <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                            –£—á–µ–Ω–∏–∫
                          </th>
                          <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                            –û–ø–µ—Ä–∞—Ü–∏—è
                          </th>
                          <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                            –°—É–º–º–∞
                          </th>
                          <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                            –û–ø–∏—Å–∞–Ω–∏–µ
                          </th>
                          <th scope="col" className="px-6 py-3 text-left text-xs font-medium admin-text-secondary uppercase tracking-wider">
                            –ë–∞–ª–∞–Ω—Å
                          </th>
                        </tr>
                      </thead>
                      <tbody className="admin-card divide-y" style={{ borderColor: 'var(--divider)' }}>
                        {mockTransactions.map((transaction, index) => (
                          <tr 
                            key={transaction.id}
                            className={`hover:bg-gray-50 transition-colors ${
                              index % 2 === 0 ? 'bg-white' : 'bg-gray-50/30'
                            }`}
                          >
                            <td className="px-6 py-4 whitespace-nowrap text-sm admin-text-secondary">
                              {new Date(transaction.date).toLocaleDateString('ru-RU')}
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap">
                              <div className="flex items-center">
                                <div className="flex-shrink-0 h-8 w-8">
                                  <div 
                                    className="h-8 w-8 rounded-full flex items-center justify-center text-white text-sm font-medium"
                                    style={{ backgroundColor: 'var(--primary-burgundy)' }}
                                  >
                                    {transaction.studentName.split(' ')[0][0]}{transaction.studentName.split(' ')[1][0]}
                                  </div>
                                </div>
                                <div className="ml-4">
                                  <div className="text-sm font-medium text-gray-900">
                                    {transaction.studentName}
                                  </div>
                                </div>
                              </div>
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap">
                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                                transaction.type === 'credit' 
                                  ? 'bg-green-100 text-green-800' 
                                  : 'bg-red-100 text-red-800'
                              }`}>
                                {transaction.type === 'credit' ? 'üí∞ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' : 'üí∏ –°–ø–∏—Å–∞–Ω–∏–µ'}
                              </span>
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap">
                              <span className={`text-sm font-medium ${
                                transaction.type === 'credit' ? 'text-green-600' : 'text-red-600'
                              }`}>
                                {transaction.type === 'credit' ? '+' : '-'}{transaction.amount.toLocaleString()}
                              </span>
                            </td>
                            <td className="px-6 py-4 text-sm text-gray-900">
                              {transaction.description}
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                              {transaction.balance.toLocaleString()} —Ç–æ–∫–µ–Ω–æ–≤
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                  
                  {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
                  <div className="admin-border px-6 py-3 flex items-center justify-between" 
                       style={{ borderTopColor: 'var(--divider)', borderTopWidth: '1px' }}>
                    <div className="text-sm admin-text-secondary">
                      –ü–æ–∫–∞–∑–∞–Ω–æ {mockTransactions.length} –∏–∑ {mockTransactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
                    </div>
                    <div className="flex items-center space-x-2">
                      <button className="px-3 py-1 text-sm admin-text-secondary hover:text-gray-900 transition-colors">
                        –ü—Ä–µ–¥—ã–¥—É—â–∞—è
                      </button>
                      <span className="px-3 py-1 text-sm bg-gray-100 rounded">1</span>
                      <button className="px-3 py-1 text-sm admin-text-secondary hover:text-gray-900 transition-colors">
                        –°–ª–µ–¥—É—é—â–∞—è
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ */}
      <TransactionModal 
        isOpen={transactionModalOpen}
        onClose={() => setTransactionModalOpen(false)}
        onSave={handleNewTransaction}
      />
    </div>
  );
} 