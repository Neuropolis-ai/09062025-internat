'use client';

import React, { useState } from 'react';
import Sidebar from '../../components/Sidebar';

interface Rule {
  id: string;
  title: string;
  content: string;
  category: 'general' | 'academic' | 'behavioral' | 'dormitory' | 'safety';
  isActive: boolean;
  lastUpdated: string;
  updatedBy: string;
  version: number;
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª
const mockRules: Rule[] = [
  {
    id: '1',
    title: '–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è',
    content: `1. –°–æ–±–ª—é–¥–∞—Ç—å –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å –∏ —É–≤–∞–∂–µ–Ω–∏–µ –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º
2. –ü—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ –ª–∏—Ü–µ–π –≤–æ–≤—Ä–µ–º—è –∏ –≥–æ—Ç–æ–≤—ã–º–∏ –∫ –∑–∞–Ω—è—Ç–∏—è–º
3. –ù–æ—Å–∏—Ç—å —à–∫–æ–ª—å–Ω—É—é —Ñ–æ—Ä–º—É —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
4. –ë–µ—Ä–µ—á—å —à–∫–æ–ª—å–Ω–æ–µ –∏–º—É—â–µ—Å—Ç–≤–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —á–∏—Å—Ç–æ—Ç—É
5. –°–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ª–∏—Ü–µ—è`,
    category: 'general',
    isActive: true,
    lastUpdated: '2024-01-15 10:30',
    updatedBy: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',
    version: 3
  },
  {
    id: '2',
    title: '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è',
    content: `1. –ü–æ—Å–µ—â–∞—Ç—å –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
2. –í—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏
3. –£–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ —É—á–∏—Ç–µ–ª—è–º –∏ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞–º
4. –ê–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —É—á–µ–±–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
5. –°–æ–±–ª—é–¥–∞—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –Ω–∞ —É—Ä–æ–∫–∞—Ö –∏ –≤–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ–º–µ–Ω`,
    category: 'academic',
    isActive: true,
    lastUpdated: '2024-01-10 14:20',
    updatedBy: '–ó–∞–≤—É—á',
    version: 2
  },
  {
    id: '3',
    title: '–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏',
    content: `1. –°–æ–±–ª—é–¥–∞—Ç—å —Ç–∏—à–∏–Ω—É –≤ —á–∞—Å—ã –æ—Ç–¥—ã—Ö–∞ (22:00 - 07:00)
2. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ
3. –£–≤–∞–∂–∞—Ç—å –ª–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å–æ—Å–µ–¥–µ–π
4. –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–±—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –¥–µ–∂—É—Ä—Å—Ç–≤–∞—Ö
5. –°–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏`,
    category: 'dormitory',
    isActive: true,
    lastUpdated: '2024-01-12 16:45',
    updatedBy: '–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å',
    version: 4
  },
  {
    id: '4',
    title: '–ü—Ä–∞–≤–∏–ª–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
    content: `1. –°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã
3. –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–æ–æ–±—â–∞—Ç—å –æ –ª—é–±—ã—Ö –ß–ü –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
4. –ù–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∑–¥–∞–Ω–∏–∏ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
5. –°–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —ç–≤–∞–∫—É–∞—Ü–∏–∏ –ø—Ä–∏ –ß–°`,
    category: 'safety',
    isActive: true,
    lastUpdated: '2024-01-08 09:15',
    updatedBy: '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ –¢–ë',
    version: 1
  },
  {
    id: '5',
    title: '–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ä–Ω—ã–µ –º–µ—Ä—ã',
    content: `1. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è
2. –ó–∞–º–µ—á–∞–Ω–∏–µ –≤ –¥–Ω–µ–≤–Ω–∏–∫ –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è
3. –í—ã–∑–æ–≤ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ—Å—Ç—É–ø–∫–∞—Ö
4. –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç –∑–∞–Ω—è—Ç–∏–π
5. –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –ª–∏—Ü–µ—è –≤ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö`,
    category: 'behavioral',
    isActive: false,
    lastUpdated: '2024-01-05 11:00',
    updatedBy: '–î–∏—Ä–µ–∫—Ç–æ—Ä',
    version: 2
  }
];

const categoryNames = {
  general: '–û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞',
  academic: '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è',
  behavioral: '–ü–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞',
  dormitory: '–ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–∂–∏—Ç–∏—è',
  safety: '–¢–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'
};

const categoryIcons = {
  general: 'üìã',
  academic: 'üìö',
  behavioral: '‚öñÔ∏è',
  dormitory: 'üè†',
  safety: 'üõ°Ô∏è'
};

export default function RulesPage() {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedCategory, setSelectedCategory] = useState<string>("–í—Å–µ");
  const [selectedStatus, setSelectedStatus] = useState<string>("–í—Å–µ");
  const [editingRule, setEditingRule] = useState<Rule | null>(null);
  const [isEditing, setIsEditing] = useState(false);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalRules = mockRules.length;
  const activeRules = mockRules.filter(r => r.isActive).length;
  const categoriesCount = Object.keys(categoryNames).length;
  const lastUpdate = Math.max(...mockRules.map(r => new Date(r.lastUpdated).getTime()));

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª
  const filteredRules = mockRules.filter(rule => {
    const matchesSearch = rule.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         rule.content.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === "–í—Å–µ" || 
                          categoryNames[rule.category as keyof typeof categoryNames] === selectedCategory;
    const matchesStatus = selectedStatus === "–í—Å–µ" ||
                         (selectedStatus === "–ê–∫—Ç–∏–≤–Ω—ã–µ" && rule.isActive) ||
                         (selectedStatus === "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ" && !rule.isActive);
    return matchesSearch && matchesCategory && matchesStatus;
  });

  const handleEditRule = (rule: Rule) => {
    setEditingRule(rule);
    setIsEditing(true);
  };

  const handleSaveRule = () => {
    if (editingRule) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞:', editingRule);
      alert(`–ü—Ä–∞–≤–∏–ª–æ "${editingRule.title}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!`);
      setIsEditing(false);
      setEditingRule(null);
    }
  };

  const handleCancelEdit = () => {
    setIsEditing(false);
    setEditingRule(null);
  };

  const handleDeleteRule = (rule: Rule) => {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ "${rule.title}"?`)) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞:', rule);
      alert(`–ü—Ä–∞–≤–∏–ª–æ "${rule.title}" —É–¥–∞–ª–µ–Ω–æ`);
    }
  };

  const handleToggleActive = (rule: Rule) => {
    // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∞–≤–∏–ª–∞:', rule);
    alert(`–°—Ç–∞—Ç—É—Å –ø—Ä–∞–≤–∏–ª–∞ "${rule.title}" –∏–∑–º–µ–Ω–µ–Ω`);
  };

  const handleCreateNewRule = () => {
    const newRule: Rule = {
      id: '',
      title: '–ù–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ',
      content: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞...',
      category: 'general',
      isActive: true,
      lastUpdated: new Date().toLocaleDateString('ru-RU'),
      updatedBy: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      version: 1
    };
    setEditingRule(newRule);
    setIsEditing(true);
  };

  return (
    <div className="min-h-screen admin-container flex">
      {/* Sidebar */}
      <Sidebar isOpen={sidebarOpen} onClose={() => setSidebarOpen(false)} />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col lg:ml-0">
        {/* Header */}
        <header className="shadow" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
          <div className="px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-8">
              <div className="flex items-center">
                {/* –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
                <button
                  onClick={() => setSidebarOpen(true)}
                  className="lg:hidden p-2 rounded-md text-white hover:bg-white/20 mr-4"
                >
                  <span className="text-xl">‚ò∞</span>
                </button>
                
                <div>
                  <h1 className="text-2xl font-bold text-white">–ü—Ä–∞–≤–∏–ª–∞ –ª–∏—Ü–µ—è</h1>
                  <p className="text-white/90 font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è–º–∏</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-4">
                <button
                  onClick={handleCreateNewRule}
                  className="admin-button-primary text-white px-4 py-2 rounded-md transition-colors"
                  style={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.2)',
                    border: '1px solid rgba(255, 255, 255, 0.3)'
                  }}
                  onMouseOver={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.3)'}
                  onMouseOut={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.2)'}
                >
                  –°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–æ
                </button>
              </div>
            </div>
          </div>
        </header>

        {/* Main content */}
        <main className="flex-1 px-4 py-6 sm:px-6 lg:px-8">
          <div className="max-w-7xl mx-auto">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üìã</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª</dt>
                        <dd className="text-lg font-medium text-gray-900">{totalRules}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">‚úÖ</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–ê–∫—Ç–∏–≤–Ω—ã—Ö</dt>
                        <dd className="text-lg font-medium text-gray-900">{activeRules}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üìÇ</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</dt>
                        <dd className="text-lg font-medium text-gray-900">{categoriesCount}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üïí</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</dt>
                        <dd className="text-lg font-medium text-gray-900">
                          {new Date(lastUpdate).toLocaleDateString('ru-RU')}
                        </dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
            <div className="admin-card mb-6">
              <div className="px-4 py-5 sm:p-6">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª
                    </label>
                    <input
                      type="text"
                      className="admin-input w-full"
                      placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedCategory}
                      onChange={(e) => setSelectedCategory(e.target.value)}
                    >
                      <option value="–í—Å–µ">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                      {Object.values(categoryNames).map(category => (
                        <option key={category} value={category}>{category}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –°—Ç–∞—Ç—É—Å
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedStatus}
                      onChange={(e) => setSelectedStatus(e.target.value)}
                    >
                      <option value="–í—Å–µ">–í—Å–µ</option>
                      <option value="–ê–∫—Ç–∏–≤–Ω—ã–µ">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                      <option value="–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä */}
            {isEditing && editingRule ? (
              /* –†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–∞–≤–∏–ª–∞ */
              <div className="admin-card mb-6">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center justify-between mb-6">
                    <div>
                      <h3 className="text-lg leading-6 font-medium text-gray-900">
                        {editingRule.id ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–æ' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ'}
                      </h3>
                      <p className="mt-1 text-sm admin-text-secondary">
                        {editingRule.id ? '–í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ' : '–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –ª–∏—Ü–µ—è'}
                      </p>
                    </div>
                    <div className="flex space-x-3">
                      <button
                        onClick={handleSaveRule}
                        className="admin-button-primary px-4 py-2 text-sm font-medium rounded-md"
                        style={{ backgroundColor: 'var(--primary-burgundy)' }}
                      >
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                      </button>
                      <button
                        onClick={handleCancelEdit}
                        className="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
                      >
                        –û—Ç–º–µ–Ω–∞
                      </button>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <label className="block text-sm font-medium admin-text-secondary mb-2">
                        –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
                      </label>
                      <input
                        type="text"
                        className="admin-input w-full"
                        value={editingRule.title}
                        onChange={(e) => setEditingRule({...editingRule, title: e.target.value})}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞"
                      />
                    </div>

                    <div>
                      <label className="block text-sm font-medium admin-text-secondary mb-2">
                        –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                      </label>
                      <select
                        className="admin-input w-full"
                        value={editingRule.category}
                        onChange={(e) => setEditingRule({...editingRule, category: e.target.value as 'general' | 'academic' | 'behavioral' | 'dormitory' | 'safety'})}
                      >
                        {Object.entries(categoryNames).map(([key, name]) => (
                          <option key={key} value={key}>{categoryIcons[key as keyof typeof categoryIcons]} {name}</option>
                        ))}
                      </select>
                    </div>
                  </div>

                  <div className="mt-6">
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
                    </label>
                    <textarea
                      rows={12}
                      className="admin-input w-full resize-none"
                      value={editingRule.content}
                      onChange={(e) => setEditingRule({...editingRule, content: e.target.value})}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞..."
                    />
                    <p className="text-xs admin-text-secondary mt-1">
                      –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
                    </p>
                  </div>

                  <div className="mt-6 flex items-center">
                    <input
                      type="checkbox"
                      className="form-checkbox h-4 w-4 rounded"
                      style={{ color: 'var(--primary-burgundy)' }}
                      checked={editingRule.isActive}
                      onChange={(e) => setEditingRule({...editingRule, isActive: e.target.checked})}
                    />
                    <span className="ml-2 text-sm font-medium admin-text-secondary">
                      –ü—Ä–∞–≤–∏–ª–æ –∞–∫—Ç–∏–≤–Ω–æ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
                    </span>
                  </div>
                </div>
              </div>
            ) : (
              /* –°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª */
              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="sm:flex sm:items-center sm:justify-between mb-6">
                    <div>
                      <h3 className="text-lg leading-6 font-medium text-gray-900">
                        –°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª
                      </h3>
                      <p className="mt-1 max-w-2xl text-sm admin-text-secondary">
                        –ù–∞–π–¥–µ–Ω–æ: {filteredRules.length} –∏–∑ {totalRules} –ø—Ä–∞–≤–∏–ª
                      </p>
                    </div>
                    <div className="mt-4 sm:mt-0">
                      <button
                        onClick={handleCreateNewRule}
                        className="admin-button-primary inline-flex items-center px-4 py-2 text-sm font-medium rounded-md"
                        style={{ backgroundColor: 'var(--primary-burgundy)' }}
                      >
                        <span className="mr-2">üìã</span>
                        –°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–æ
                      </button>
                    </div>
                  </div>

                  {filteredRules.length === 0 ? (
                    <div className="text-center py-12">
                      <div className="w-12 h-12 mx-auto mb-4 rounded-full flex items-center justify-center" style={{ backgroundColor: 'var(--background-gray)' }}>
                        <span className="text-2xl">üìã</span>
                      </div>
                      <h3 className="text-lg font-medium text-gray-900 mb-2">–ü—Ä–∞–≤–∏–ª –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                      <p className="admin-text-secondary">
                        –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ.
                      </p>
                    </div>
                  ) : (
                    <div className="space-y-6">
                      {filteredRules.map((rule) => (
                        <div
                          key={rule.id}
                          className="border rounded-lg p-6"
                          style={{ borderColor: 'var(--divider)' }}
                        >
                          <div className="flex items-start justify-between">
                            <div className="flex-1">
                              <div className="flex items-center space-x-3 mb-3">
                                <span className="text-xl">{categoryIcons[rule.category]}</span>
                                <h4 className="text-lg font-medium text-gray-900">
                                  {rule.title}
                                </h4>
                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                  {categoryNames[rule.category]}
                                </span>
                                {rule.isActive ? (
                                  <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                    –ê–∫—Ç–∏–≤–Ω–æ
                                  </span>
                                ) : (
                                  <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                    –ù–µ–∞–∫—Ç–∏–≤–Ω–æ
                                  </span>
                                )}
                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                                  v{rule.version}
                                </span>
                              </div>
                              
                              <div className="text-sm admin-text-secondary mb-4 whitespace-pre-line">
                                {rule.content}
                              </div>

                              <div className="flex items-center justify-between text-xs admin-text-secondary">
                                <span>
                                  –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date(rule.lastUpdated).toLocaleDateString('ru-RU')} 
                                  {rule.updatedBy && ` ‚Ä¢ ${rule.updatedBy}`}
                                </span>
                              </div>
                            </div>

                            <div className="flex items-center space-x-2 ml-4">
                              <button
                                onClick={() => handleToggleActive(rule)}
                                className={`p-2 rounded ${
                                  rule.isActive 
                                    ? 'text-red-600 hover:bg-red-50' 
                                    : 'text-green-600 hover:bg-green-50'
                                }`}
                                title={rule.isActive ? '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                              >
                                {rule.isActive ? 'üî¥' : 'üü¢'}
                              </button>
                              <button
                                onClick={() => handleEditRule(rule)}
                                className="p-2 text-blue-600 hover:bg-blue-50 rounded"
                                title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                              >
                                ‚úèÔ∏è
                              </button>
                              <button
                                onClick={() => handleDeleteRule(rule)}
                                className="p-2 text-red-600 hover:bg-red-50 rounded"
                                title="–£–¥–∞–ª–∏—Ç—å"
                              >
                                üóëÔ∏è
                              </button>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        </main>
      </div>
    </div>
  );
} 