'use client';

import React, { useState } from 'react';
import Sidebar from '../../components/Sidebar';
import FAQModal from '../../components/FAQModal';

interface FAQ {
  id: string;
  question: string;
  answer: string;
  category: 'academic' | 'dormitory' | 'finance' | 'technical' | 'general';
  isVisible: boolean;
  priority: 'low' | 'medium' | 'high';
  createdAt: string;
  updatedAt: string;
  createdBy: string;
  views: number;
  helpful: number;
  notHelpful: number;
}

interface FAQFormData {
  question: string;
  answer: string;
  category: 'academic' | 'dormitory' | 'finance' | 'technical' | 'general';
  isVisible: boolean;
  priority: 'low' | 'medium' | 'high';
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ FAQ
const mockFAQs: FAQ[] = [
  {
    id: '1',
    question: '–ö–∞–∫ –≤–æ–π—Ç–∏ –≤ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ª–∏—Ü–µ—è?',
    answer: '–î–ª—è –≤—Ö–æ–¥–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ –∂–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ –∏ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç. –õ–æ–≥–∏–Ω - —ç—Ç–æ –≤–∞—à –Ω–æ–º–µ—Ä LINN, –ø–∞—Ä–æ–ª—å –≤—ã–¥–∞–µ—Ç—Å—è –∫–ª–∞—Å—Å–Ω—ã–º —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.',
    category: 'technical',
    isVisible: true,
    priority: 'high',
    createdAt: '2024-01-10 10:00',
    updatedAt: '2024-01-15 14:30',
    createdBy: 'IT-–æ—Ç–¥–µ–ª',
    views: 245,
    helpful: 198,
    notHelpful: 12
  },
  {
    id: '2',
    question: '–ö–∞–∫ –Ω–∞—á–∏—Å–ª–∏—Ç—å L-Coin –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è?',
    answer: 'L-Coin –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞: –æ—Ç–ª–∏—á–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ (+10), –ø–æ–±–µ–¥—ã –≤ –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö (+50), —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö (+20), –¥–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –ª–∏—Ü–µ—é (+5). –¢–∞–∫–∂–µ —É—á–∏—Ç–µ–ª—è –º–æ–≥—É—Ç –Ω–∞—á–∏—Å–ª–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ L-Coin —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –ø–æ–æ—â—Ä–µ–Ω–∏–π.',
    category: 'finance',
    isVisible: true,
    priority: 'high',
    createdAt: '2024-01-08 09:15',
    updatedAt: '2024-01-12 16:20',
    createdBy: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',
    views: 189,
    helpful: 156,
    notHelpful: 8
  },
  {
    id: '3',
    question: '–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏',
    answer: '–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞: —Å–æ–±–ª—é–¥–µ–Ω–∏–µ —Ç–∏—à–∏–Ω—ã —Å 22:00 –¥–æ 07:00, –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —á–∏—Å—Ç–æ—Ç—ã –≤ –∫–æ–º–Ω–∞—Ç–µ, –∑–∞–ø—Ä–µ—Ç –Ω–∞ –∫—É—Ä–µ–Ω–∏–µ –∏ –∞–ª–∫–æ–≥–æ–ª—å, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –¥–µ–∂—É—Ä—Å—Ç–≤–∞—Ö. –ü–æ—Å–µ—â–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∫–æ–º–Ω–∞—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –¥–æ 21:00.',
    category: 'dormitory',
    isVisible: true,
    priority: 'medium',
    createdAt: '2024-01-05 11:30',
    updatedAt: '2024-01-10 09:45',
    createdBy: '–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å',
    views: 134,
    helpful: 118,
    notHelpful: 5
  },
  {
    id: '4',
    question: '–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—É—Å–∫?',
    answer: '–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –æ—Ç–ø—É—Å–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: 1) –ù–∞–ø–∏—Å–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –∏–º—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞, 2) –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–¥–æ—Ä–æ–≤—å—è (–µ—Å–ª–∏ –æ—Ç–ø—É—Å–∫ –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –ø–æ–∫–∞–∑–∞–Ω–∏—è–º), 3) –ü–æ–ª—É—á–∏—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π, 4) –ü—Ä–æ–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ —Å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞.',
    category: 'academic',
    isVisible: true,
    priority: 'medium',
    createdAt: '2024-01-03 13:20',
    updatedAt: '2024-01-08 10:15',
    createdBy: '–ó–∞–≤—É—á',
    views: 67,
    helpful: 52,
    notHelpful: 3
  },
  {
    id: '5',
    question: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π',
    answer: '–°—Ç–æ–ª–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç: –∑–∞–≤—Ç—Ä–∞–∫ 07:30-08:30, –æ–±–µ–¥ 12:00-14:00, —É–∂–∏–Ω 18:00-19:30. –í –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏: –∑–∞–≤—Ç—Ä–∞–∫ 08:00-09:00, –æ–±–µ–¥ 13:00-14:30, —É–∂–∏–Ω 18:30-19:30.',
    category: 'general',
    isVisible: true,
    priority: 'low',
    createdAt: '2024-01-01 15:00',
    updatedAt: '2024-01-07 12:30',
    createdBy: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',
    views: 98,
    helpful: 87,
    notHelpful: 2
  },
  {
    id: '6',
    question: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –≤ –∫–æ–º–Ω–∞—Ç–µ?',
    answer: '–ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º: 1) –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–æ—É—Ç–µ—Ä –≤ –∫–æ–º–Ω–∞—Ç–µ, 2) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–±–µ–ª–µ–π, 3) –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞, –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –≤ IT-–æ—Ç–¥–µ–ª —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–µ–∂—É—Ä–Ω–æ–º—É –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—é.',
    category: 'technical',
    isVisible: false,
    priority: 'low',
    createdAt: '2023-12-28 16:45',
    updatedAt: '2024-01-02 11:20',
    createdBy: 'IT-–æ—Ç–¥–µ–ª',
    views: 45,
    helpful: 32,
    notHelpful: 8
  }
];

const categoryNames = {
  academic: '–£—á–µ–±–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
  dormitory: '–û–±—â–µ–∂–∏—Ç–∏–µ',
  finance: '–§–∏–Ω–∞–Ω—Å—ã –∏ L-Coin',
  technical: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã',
  general: '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã'
};

const categoryIcons = {
  academic: 'üìö',
  dormitory: 'üè†',
  finance: 'üí∞',
  technical: 'üíª',
  general: '‚ùì'
};

const priorityNames = {
  low: '–ù–∏–∑–∫–∏–π',
  medium: '–°—Ä–µ–¥–Ω–∏–π',
  high: '–í—ã—Å–æ–∫–∏–π'
};

const priorityColors = {
  low: 'bg-gray-100 text-gray-800',
  medium: 'bg-yellow-100 text-yellow-800',
  high: 'bg-red-100 text-red-800'
};

export default function FAQPage() {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedCategory, setSelectedCategory] = useState<string>("–í—Å–µ");
  const [selectedPriority, setSelectedPriority] = useState<string>("–í—Å–µ");
  const [selectedStatus, setSelectedStatus] = useState<string>("–í—Å–µ");
  const [faqModalOpen, setFaqModalOpen] = useState(false);
  const [editingFAQ, setEditingFAQ] = useState<FAQ | null>(null);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalFAQs = mockFAQs.length;
  const visibleFAQs = mockFAQs.filter(f => f.isVisible).length;
  const totalViews = mockFAQs.reduce((sum, f) => sum + f.views, 0);
  const averageHelpfulness = Math.round(
    (mockFAQs.reduce((sum, f) => sum + f.helpful, 0) / 
     mockFAQs.reduce((sum, f) => sum + f.helpful + f.notHelpful, 0)) * 100
  );

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è FAQ
  const filteredFAQs = mockFAQs.filter(faq => {
    const matchesSearch = faq.question.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         faq.answer.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === "–í—Å–µ" || 
                          categoryNames[faq.category as keyof typeof categoryNames] === selectedCategory;
    const matchesPriority = selectedPriority === "–í—Å–µ" || 
                          priorityNames[faq.priority as keyof typeof priorityNames] === selectedPriority;
    const matchesStatus = selectedStatus === "–í—Å–µ" ||
                         (selectedStatus === "–í–∏–¥–∏–º—ã–µ" && faq.isVisible) ||
                         (selectedStatus === "–°–∫—Ä—ã—Ç—ã–µ" && !faq.isVisible);
    return matchesSearch && matchesCategory && matchesPriority && matchesStatus;
  });

  const handleEditFAQ = (faq: FAQ) => {
    setEditingFAQ(faq);
    setFaqModalOpen(true);
  };

  const handleDeleteFAQ = (faq: FAQ) => {
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å "${faq.question}"?`)) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ FAQ:', faq);
      alert(`–í–æ–ø—Ä–æ—Å "${faq.question}" —É–¥–∞–ª–µ–Ω`);
    }
  };

  const handleToggleVisible = (faq: FAQ) => {
    // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
    console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ FAQ:', faq);
    alert(`–í–∏–¥–∏–º–æ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–∞ "${faq.question}" –∏–∑–º–µ–Ω–µ–Ω–∞`);
  };

  const handleAddFAQ = () => {
    setEditingFAQ(null);
    setFaqModalOpen(true);
  };

  const handleSaveFAQ = (faqData: FAQFormData) => {
    if (editingFAQ) {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ FAQ
      console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ FAQ:', { ...editingFAQ, ...faqData });
      alert(`–í–æ–ø—Ä–æ—Å "${faqData.question}" –æ–±–Ω–æ–≤–ª–µ–Ω!`);
    } else {
      // TODO: API-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ FAQ
      console.log('–°–æ–∑–¥–∞–Ω–∏–µ FAQ:', faqData);
      alert(`–í–æ–ø—Ä–æ—Å "${faqData.question}" —Å–æ–∑–¥–∞–Ω!`);
    }
  };

  const handleCloseFAQModal = () => {
    setFaqModalOpen(false);
    setEditingFAQ(null);
  };

  const getHelpfulnessPercentage = (helpful: number, notHelpful: number) => {
    const total = helpful + notHelpful;
    return total > 0 ? Math.round((helpful / total) * 100) : 0;
  };

  return (
    <div className="min-h-screen admin-container flex">
      {/* Sidebar */}
      <Sidebar isOpen={sidebarOpen} onClose={() => setSidebarOpen(false)} />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col lg:ml-0">
        {/* Header */}
        <header className="admin-card shadow" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
          <div className="px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-6">
              <div className="flex items-center">
                {/* –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
                <button
                  onClick={() => setSidebarOpen(true)}
                  className="lg:hidden p-2 rounded-md text-white hover:bg-white/20 mr-4"
                >
                  <span className="text-xl">‚ò∞</span>
                </button>
                
                <div>
                  <h1 className="text-2xl font-bold text-white">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h1>
                  <p className="text-white/90 font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π –∏ FAQ</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-4">
                <button
                  onClick={handleAddFAQ}
                  className="admin-button-primary text-white px-4 py-2 rounded-md transition-colors"
                  style={{ 
                    backgroundColor: 'rgba(255, 255, 255, 0.2)',
                    border: '1px solid rgba(255, 255, 255, 0.3)'
                  }}
                  onMouseOver={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.3)'}
                  onMouseOut={(e) => e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.2)'}
                >
                  –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å
                </button>
              </div>
            </div>
          </div>
        </header>

        {/* Main content */}
        <main className="flex-1 px-4 py-6 sm:px-6 lg:px-8">
          <div className="max-w-7xl mx-auto">
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">‚ùì</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤</dt>
                        <dd className="text-lg font-medium text-gray-900">{totalFAQs}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üëÅÔ∏è</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í–∏–¥–∏–º—ã—Ö</dt>
                        <dd className="text-lg font-medium text-gray-900">{visibleFAQs}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üìä</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</dt>
                        <dd className="text-lg font-medium text-gray-900">{totalViews}</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>

              <div className="admin-card">
                <div className="px-4 py-5 sm:p-6">
                  <div className="flex items-center">
                    <div className="flex-shrink-0">
                      <div className="w-8 h-8 rounded-md flex items-center justify-center" style={{ backgroundColor: 'var(--primary-burgundy)' }}>
                        <span className="text-white font-bold">üëç</span>
                      </div>
                    </div>
                    <div className="ml-5 w-0 flex-1">
                      <dl>
                        <dt className="text-sm font-medium admin-text-secondary truncate">–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å</dt>
                        <dd className="text-lg font-medium text-gray-900">{averageHelpfulness}%</dd>
                      </dl>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
            <div className="admin-card mb-6">
              <div className="px-4 py-5 sm:p-6">
                <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ü–æ–∏—Å–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
                    </label>
                    <input
                      type="text"
                      className="admin-input w-full"
                      placeholder="–ü–æ–∏—Å–∫ –ø–æ –≤–æ–ø—Ä–æ—Å—É –∏–ª–∏ –æ—Ç–≤–µ—Ç—É..."
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedCategory}
                      onChange={(e) => setSelectedCategory(e.target.value)}
                    >
                      <option value="–í—Å–µ">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                      {Object.values(categoryNames).map(category => (
                        <option key={category} value={category}>{category}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedPriority}
                      onChange={(e) => setSelectedPriority(e.target.value)}
                    >
                      <option value="–í—Å–µ">–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã</option>
                      {Object.values(priorityNames).map(priority => (
                        <option key={priority} value={priority}>{priority}</option>
                      ))}
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium admin-text-secondary mb-2">
                      –°—Ç–∞—Ç—É—Å
                    </label>
                    <select
                      className="admin-input w-full"
                      value={selectedStatus}
                      onChange={(e) => setSelectedStatus(e.target.value)}
                    >
                      <option value="–í—Å–µ">–í—Å–µ</option>
                      <option value="–í–∏–¥–∏–º—ã–µ">–í–∏–¥–∏–º—ã–µ</option>
                      <option value="–°–∫—Ä—ã—Ç—ã–µ">–°–∫—Ä—ã—Ç—ã–µ</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>

            {/* –°–ø–∏—Å–æ–∫ FAQ */}
            <div className="admin-card">
              <div className="px-4 py-5 sm:p-6">
                <div className="sm:flex sm:items-center sm:justify-between mb-6">
                  <div>
                    <h3 className="text-lg leading-6 font-medium text-gray-900">
                      –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
                    </h3>
                    <p className="mt-1 max-w-2xl text-sm admin-text-secondary">
                      –ù–∞–π–¥–µ–Ω–æ: {filteredFAQs.length} –∏–∑ {totalFAQs} –≤–æ–ø—Ä–æ—Å–æ–≤
                    </p>
                  </div>
                  <div className="mt-4 sm:mt-0">
                    <button
                      onClick={handleAddFAQ}
                      className="admin-button-primary inline-flex items-center px-4 py-2 text-sm font-medium rounded-md"
                      style={{ backgroundColor: 'var(--primary-burgundy)' }}
                    >
                      <span className="mr-2">‚ùì</span>
                      –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å
                    </button>
                  </div>
                </div>

                {filteredFAQs.length === 0 ? (
                  <div className="text-center py-12">
                    <div className="w-12 h-12 mx-auto mb-4 rounded-full flex items-center justify-center" style={{ backgroundColor: 'var(--background-gray)' }}>
                      <span className="text-2xl">‚ùì</span>
                    </div>
                    <h3 className="text-lg font-medium text-gray-900 mb-2">–í–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p className="admin-text-secondary">
                      –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.
                    </p>
                  </div>
                ) : (
                  <div className="space-y-4">
                    {filteredFAQs.map((faq) => (
                      <div
                        key={faq.id}
                        className="border rounded-lg p-4"
                        style={{ borderColor: 'var(--divider)' }}
                      >
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <div className="flex items-center space-x-3 mb-2">
                              <span className="text-lg">{categoryIcons[faq.category]}</span>
                              <h4 className="text-lg font-medium text-gray-900">
                                {faq.question}
                              </h4>
                              <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                {categoryNames[faq.category]}
                              </span>
                              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${priorityColors[faq.priority]}`}>
                                {priorityNames[faq.priority]}
                              </span>
                              {faq.isVisible ? (
                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                  –í–∏–¥–∏–º—ã–π
                                </span>
                              ) : (
                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                  –°–∫—Ä—ã—Ç—ã–π
                                </span>
                              )}
                            </div>
                            
                            <p className="text-sm admin-text-secondary mb-3">
                              {faq.answer}
                            </p>

                            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-xs admin-text-secondary">
                              <div>
                                <span className="font-medium">–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:</span>
                                <div>{faq.views}</div>
                              </div>
                              <div>
                                <span className="font-medium">–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:</span>
                                <div>
                                  üëç {faq.helpful} / üëé {faq.notHelpful} 
                                  ({getHelpfulnessPercentage(faq.helpful, faq.notHelpful)}%)
                                </div>
                              </div>
                              <div>
                                <span className="font-medium">–°–æ–∑–¥–∞–Ω:</span>
                                <div>{new Date(faq.createdAt).toLocaleDateString('ru-RU')}</div>
                              </div>
                              <div>
                                <span className="font-medium">–ê–≤—Ç–æ—Ä:</span>
                                <div>{faq.createdBy}</div>
                              </div>
                            </div>

                            {faq.updatedAt !== faq.createdAt && (
                              <div className="mt-2 text-xs admin-text-secondary">
                                <span className="font-medium">–û–±–Ω–æ–≤–ª–µ–Ω:</span> {new Date(faq.updatedAt).toLocaleDateString('ru-RU')}
                              </div>
                            )}
                          </div>

                          <div className="flex items-center space-x-2 ml-4">
                            <button
                              onClick={() => handleToggleVisible(faq)}
                              className={`p-2 rounded ${
                                faq.isVisible 
                                  ? 'text-red-600 hover:bg-red-50' 
                                  : 'text-green-600 hover:bg-green-50'
                              }`}
                              title={faq.isVisible ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'}
                            >
                              {faq.isVisible ? 'üëÅÔ∏è‚Äçüó®Ô∏è' : 'üëÅÔ∏è'}
                            </button>
                            <button
                              onClick={() => handleEditFAQ(faq)}
                              className="p-2 text-blue-600 hover:bg-blue-50 rounded"
                              title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                            >
                              ‚úèÔ∏è
                            </button>
                            <button
                              onClick={() => handleDeleteFAQ(faq)}
                              className="p-2 text-red-600 hover:bg-red-50 rounded"
                              title="–£–¥–∞–ª–∏—Ç—å"
                            >
                              üóëÔ∏è
                            </button>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
        </main>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è FAQ */}
      <FAQModal 
        isOpen={faqModalOpen}
        onClose={handleCloseFAQModal}
        faq={editingFAQ}
        onSave={handleSaveFAQ}
      />
    </div>
  );
} 