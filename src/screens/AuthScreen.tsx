import React, { useState } from 'react'
import { ScrollView, View } from 'react-native'
import { createStyleSheet, useStyles } from 'react-native-unistyles'
import { Button } from '../components/ui/Button'
import { Card } from '../components/ui/Card'
import { Input } from '../components/ui/Input'
import { Typography, Heading, Paragraph, Caption } from '../components/ui/Typography'

export const AuthScreen: React.FC = () => {
  const { styles } = useStyles(stylesheet)
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [loading, setLoading] = useState(false)
  const [isLogin, setIsLogin] = useState(true)

  const handleAuth = async (): Promise<void> => {
    setLoading(true)
    // –ò–º–∏—Ç–∞—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞
    await new Promise(resolve => setTimeout(resolve, 2000))
    setLoading(false)
  }

  const toggleMode = (): void => {
    setIsLogin(!isLogin)
  }

  return (
    <ScrollView style={styles.container} contentContainerStyle={styles.content}>
      {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <View style={styles.logoSection}>
        <Typography variant="h1" style={styles.logo}>
          üéì
        </Typography>
        <Heading level={2} color="primary" align="center">
          –õ–∏—Ü–µ–π-–∏–Ω—Ç–µ—Ä–Ω–∞—Ç –ü–æ–¥–º–æ—Å–∫–æ–≤–Ω—ã–π
        </Heading>
        <Caption align="center" color="muted">
          –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ ‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ ‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ
        </Caption>
      </View>

      {/* –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      <Card variant="elevated" style={styles.authCard}>
        <Card.Header>
          <Heading level={3} align="center">
            {isLogin ? 'üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É' : 'üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}
          </Heading>
        </Card.Header>
        
        <Card.Body>
          <View style={styles.formSection}>
            <Input
              label="Email –∏–ª–∏ –ª–æ–≥–∏–Ω"
              placeholder="student@lyceum.ru"
              variant="outlined"
              value={email}
              onChangeText={setEmail}
              keyboardType="email-address"
              autoCapitalize="none"
            />
            
            <Input
              label="–ü–∞—Ä–æ–ª—å"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              variant="outlined"
              value={password}
              onChangeText={setPassword}
              secureTextEntry
            />
            
            {!isLogin && (
              <Input
                label="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"
                placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                variant="outlined"
                secureTextEntry
              />
            )}
            
            <Button
              variant="primary"
              size="large"
              onPress={handleAuth}
              loading={loading}
              style={styles.authButton}
            >
              {isLogin ? '–í–æ–π—Ç–∏ –≤ –ª–∏—Ü–µ–π' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
            </Button>
            
            <Button
              variant="ghost"
              size="medium"
              onPress={toggleMode}
            >
              {isLogin ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è' : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏'}
            </Button>
          </View>
        </Card.Body>
      </Card>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ */}
      <View style={styles.optionsSection}>
        <Button
          variant="secondary"
          size="medium"
          onPress={() => {}}
          style={styles.optionButton}
        >
          üîë –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
        </Button>
        
        <Button
          variant="secondary"
          size="medium"
          onPress={() => {}}
          style={styles.optionButton}
        >
          üì± –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ QR-–∫–æ–¥
        </Button>
        
        <Button
          variant="secondary"
          size="medium"
          onPress={() => {}}
          style={styles.optionButton}
        >
          üëÜ –ë–∏–æ–º–µ—Ç—Ä–∏—è (Face ID)
        </Button>
      </View>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—Ü–µ–µ */}
      <Card variant="outlined" style={styles.infoCard}>
        <Card.Body>
          <Heading level={4} align="center" color="secondary">
            üíé –û –ª–∏—Ü–µ–µ
          </Heading>
          <Paragraph align="center" color="muted">
            –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏, 
            —Ä–∞–∑–≤–∏—Ç–æ–π —Å–∏—Å—Ç–µ–º–æ–π —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º–æ–π.
          </Paragraph>
        </Card.Body>
      </Card>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
      <View style={styles.contactsSection}>
        <Caption align="center" color="muted">
          üìû –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: +7 (495) 123-45-67
        </Caption>
        <Caption align="center" color="muted">
          üìß support@lyceum-podmoskovye.ru
        </Caption>
        <Caption align="center" color="muted">
          üåê www.lyceum-podmoskovye.ru
        </Caption>
      </View>
    </ScrollView>
  )
}

const stylesheet = createStyleSheet((theme) => ({
  container: {
    flex: 1,
    backgroundColor: theme.colors.ultraLight,
  },
  content: {
    padding: theme.spacing.lg,
    paddingTop: theme.spacing.xxl,
    paddingBottom: theme.spacing.xxxl,
  },
  
  // –õ–æ–≥–æ—Ç–∏–ø
  logoSection: {
    alignItems: 'center',
    marginBottom: theme.spacing.xl,
    paddingVertical: theme.spacing.lg,
  },
  logo: {
    fontSize: 80,
    marginBottom: theme.spacing.md,
  },
  
  // –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  authCard: {
    marginBottom: theme.spacing.xl,
  },
  formSection: {
    gap: theme.spacing.lg,
  },
  authButton: {
    marginTop: theme.spacing.md,
  },
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
  optionsSection: {
    gap: theme.spacing.sm,
    marginBottom: theme.spacing.xl,
  },
  optionButton: {
    marginHorizontal: theme.spacing.sm,
  },
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
  infoCard: {
    marginBottom: theme.spacing.xl,
  },
  
  // –ö–æ–Ω—Ç–∞–∫—Ç—ã
  contactsSection: {
    gap: theme.spacing.xs,
    marginTop: theme.spacing.lg,
  },
})) 