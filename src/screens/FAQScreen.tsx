import React, { useState } from 'react'
import { View, Text, ScrollView, TouchableOpacity, StyleSheet, TextInput } from 'react-native'
import { useNavigation } from '@react-navigation/native'

interface FAQ {
  id: string
  question: string
  answer: string
  category: string
  tags: string[]
  helpful: number
  expanded?: boolean
}

const mockFAQs: FAQ[] = [
  {
    id: '1',
    question: '–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –ª–∏—Ü–µ–π—Å–∫–∏—Ö –±–∞–ª–ª–æ–≤?',
    answer: '–û—Ç–∫—Ä–æ–π—Ç–µ –º–æ–¥—É–ª—å "–ë–∞–Ω–∫" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞. –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º –±–∞–ª–ª–∞–º.',
    category: '–ë–∞–Ω–∫',
    tags: ['–±–∞–ª–∞–Ω—Å', '–±–∞–ª–ª—ã', '—Å—á–µ—Ç'],
    helpful: 45
  },
  {
    id: '2',
    question: '–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥?',
    answer: '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–æ–¥—É–ª—å "–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å". –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ —Å–≤–æ–∏ –æ—Ü–µ–Ω–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º, —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª, –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∫–ª–∞—Å—Å–∞ –∏ –ª–∏—Ü–µ—è, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º.',
    category: '–£—á–µ–±–∞',
    tags: ['–æ—Ü–µ–Ω–∫–∏', '—Ä–µ–π—Ç–∏–Ω–≥', '—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å'],
    helpful: 38
  },
  {
    id: '3',
    question: '–ì–¥–µ –Ω–∞–π—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤?',
    answer: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–∫–∏ "–°–µ–≥–æ–¥–Ω—è" –∏–ª–∏ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ". –ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å, —Ç–∞–∫ –∏ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é.',
    category: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ',
    tags: ['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '—É—Ä–æ–∫–∏', '–≤—Ä–µ–º—è'],
    helpful: 52
  },
  {
    id: '4',
    question: '–ö–∞–∫ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ L-Shop?',
    answer: '–û—Ç–∫—Ä–æ–π—Ç–µ –º–æ–¥—É–ª—å L-Shop, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ª–∏—Ü–µ–π—Å–∫–∏–º–∏ –±–∞–ª–ª–∞–º–∏. –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ.',
    category: 'L-Shop',
    tags: ['–ø–æ–∫—É–ø–∫–∏', '–º–∞–≥–∞–∑–∏–Ω', '–∑–∞–∫–∞–∑'],
    helpful: 29
  },
  {
    id: '5',
    question: '–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞—É–∫—Ü–∏–æ–Ω–µ?',
    answer: '–í –º–æ–¥—É–ª–µ "–ê—É–∫—Ü–∏–æ–Ω" –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ª–æ—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É". –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞–≤–∫–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –≤—Ä–µ–º–µ–Ω–µ–º –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤. –ï—Å–ª–∏ –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–∞–∏–≤—ã—Å—à–µ–π, –≤—ã –≤—ã–∏–≥—Ä–∞–µ—Ç–µ –ª–æ—Ç.',
    category: '–ê—É–∫—Ü–∏–æ–Ω',
    tags: ['–∞—É–∫—Ü–∏–æ–Ω', '—Å—Ç–∞–≤–∫–∏', '—Ç–æ—Ä–≥–∏'],
    helpful: 22
  },
  {
    id: '6',
    question: '–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ù–µ–π—Ä–æ—á–∞—Ç–æ–º?',
    answer: '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —á–∞—Ç–∞ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –º–æ–¥—É–ª—å "–ù–µ–π—Ä–æ—á–∞—Ç". AI-–ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ –ª–∏—Ü–µ–µ, –ø–æ–º–æ–∂–µ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∏ –æ—Ü–µ–Ω–∫–∞–º–∏.',
    category: '–ß–∞—Ç',
    tags: ['–Ω–µ–π—Ä–æ—á–∞—Ç', '–ø–æ–º–æ—â—å', 'ai'],
    helpful: 31
  },
  {
    id: '7',
    question: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å?',
    answer: '–ù–∞ —ç–∫—Ä–∞–Ω–µ –≤—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?". –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∏–ª–∏ –Ω–æ–º–µ—Ä —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞. –ù–∞ –ø–æ—á—Ç—É –ø—Ä–∏–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è.',
    category: '–ê–∫–∫–∞—É–Ω—Ç',
    tags: ['–ø–∞—Ä–æ–ª—å', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', '–≤—Ö–æ–¥'],
    helpful: 18
  },
  {
    id: '8',
    question: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ —Ä–µ—Å–ø—É–±–ª–∏–∫–∏?',
    answer: '–ú–æ–¥—É–ª—å "–†–µ—Å–ø—É–±–ª–∏–∫–∞" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—Ü–µ—è: –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ, –ø–∞—Ä–ª–∞–º–µ–Ω—Ç, —Å—É–¥. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –æ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö, –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö –∏ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∂–∏–∑–Ω–∏.',
    category: '–†–µ—Å–ø—É–±–ª–∏–∫–∞',
    tags: ['—Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', '–ø—Ä–æ–µ–∫—Ç—ã'],
    helpful: 26
  }
]

const categories = [
  { id: 'all', name: '–í—Å–µ', icon: 'üìö' },
  { id: '–ë–∞–Ω–∫', name: '–ë–∞–Ω–∫', icon: 'üè¶' },
  { id: '–£—á–µ–±–∞', name: '–£—á–µ–±–∞', icon: 'üìä' },
  { id: 'L-Shop', name: 'L-Shop', icon: 'üõí' },
  { id: '–ê—É–∫—Ü–∏–æ–Ω', name: '–ê—É–∫—Ü–∏–æ–Ω', icon: 'üèÜ' },
  { id: '–ß–∞—Ç', name: '–ß–∞—Ç', icon: 'ü§ñ' },
  { id: '–ê–∫–∫–∞—É–Ω—Ç', name: '–ê–∫–∫–∞—É–Ω—Ç', icon: 'üë§' },
]

export const FAQScreen: React.FC = () => {
  const navigation = useNavigation()
  const [faqs, setFaqs] = useState(mockFAQs)
  const [searchQuery, setSearchQuery] = useState('')
  const [selectedCategory, setSelectedCategory] = useState('all')

  const filteredFAQs = faqs.filter(faq => {
    const matchesSearch = searchQuery === '' || 
      faq.question.toLowerCase().includes(searchQuery.toLowerCase()) ||
      faq.answer.toLowerCase().includes(searchQuery.toLowerCase()) ||
      faq.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))
    
    const matchesCategory = selectedCategory === 'all' || faq.category === selectedCategory
    
    return matchesSearch && matchesCategory
  })

  const toggleFAQ = (id: string) => {
    setFaqs(prev => prev.map(faq => 
      faq.id === id ? { ...faq, expanded: !faq.expanded } : faq
    ))
  }

  const markHelpful = (id: string) => {
    setFaqs(prev => prev.map(faq => 
      faq.id === id ? { ...faq, helpful: faq.helpful + 1 } : faq
    ))
  }

  const renderFAQ = (faq: FAQ) => (
    <View key={faq.id} style={styles.faqCard}>
      <TouchableOpacity 
        style={styles.faqHeader}
        onPress={() => toggleFAQ(faq.id)}
      >
        <View style={styles.faqTitleContainer}>
          <Text style={styles.faqQuestion}>{faq.question}</Text>
          <View style={styles.faqMeta}>
            <Text style={styles.faqCategory}>{faq.category}</Text>
            <Text style={styles.faqHelpful}>üëç {faq.helpful}</Text>
          </View>
        </View>
        <Text style={[
          styles.expandIcon,
          faq.expanded && styles.expandIconRotated
        ]}>
          ‚ñº
        </Text>
      </TouchableOpacity>
      
      {faq.expanded && (
        <View style={styles.faqContent}>
          <Text style={styles.faqAnswer}>{faq.answer}</Text>
          
          <View style={styles.faqActions}>
            <TouchableOpacity 
              style={styles.helpfulButton}
              onPress={() => markHelpful(faq.id)}
            >
              <Text style={styles.helpfulIcon}>üëç</Text>
              <Text style={styles.helpfulText}>–ü–æ–ª–µ–∑–Ω–æ</Text>
            </TouchableOpacity>
            
            <TouchableOpacity style={styles.shareButton}>
              <Text style={styles.shareIcon}>üì§</Text>
              <Text style={styles.shareText}>–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</Text>
            </TouchableOpacity>
          </View>
        </View>
      )}
    </View>
  )

  return (
    <View style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity 
          style={styles.backButton}
          onPress={() => navigation.goBack()}
        >
          <Text style={styles.backIcon}>‚Üê</Text>
        </TouchableOpacity>
        
        <View style={styles.headerContent}>
          <Text style={styles.headerTitle}>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</Text>
          <Text style={styles.headerSubtitle}>–ù–∞–π–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</Text>
        </View>
      </View>

      {/* Search */}
      <View style={styles.searchContainer}>
        <View style={styles.searchInputContainer}>
          <Text style={styles.searchIcon}>üîç</Text>
          <TextInput
            style={styles.searchInput}
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º..."
            value={searchQuery}
            onChangeText={setSearchQuery}
            placeholderTextColor="#999999"
          />
          {searchQuery !== '' && (
            <TouchableOpacity 
              style={styles.clearButton}
              onPress={() => setSearchQuery('')}
            >
              <Text style={styles.clearIcon}>‚úï</Text>
            </TouchableOpacity>
          )}
        </View>
      </View>

      {/* Categories */}
      <View style={styles.categoriesContainer}>
        <ScrollView 
          horizontal 
          showsHorizontalScrollIndicator={false}
          contentContainerStyle={styles.categoriesList}
        >
          {categories.map(category => (
            <TouchableOpacity
              key={category.id}
              style={[
                styles.categoryButton,
                selectedCategory === category.id && styles.activeCategoryButton
              ]}
              onPress={() => setSelectedCategory(category.id)}
            >
              <Text style={styles.categoryIcon}>{category.icon}</Text>
              <Text style={[
                styles.categoryText,
                selectedCategory === category.id && styles.activeCategoryText
              ]}>
                {category.name}
              </Text>
            </TouchableOpacity>
          ))}
        </ScrollView>
      </View>

      {/* FAQ List */}
      <ScrollView style={styles.faqList}>
        {searchQuery && (
          <View style={styles.searchResults}>
            <Text style={styles.searchResultsText}>
              –ù–∞–π–¥–µ–Ω–æ {filteredFAQs.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è "{searchQuery}"
            </Text>
          </View>
        )}
        
        {filteredFAQs.map(renderFAQ)}
        
        {filteredFAQs.length === 0 && (
          <View style={styles.emptyState}>
            <Text style={styles.emptyIcon}>ü§î</Text>
            <Text style={styles.emptyTitle}>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</Text>
            <Text style={styles.emptyMessage}>
              {searchQuery 
                ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
                : '–í –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤'
              }
            </Text>
          </View>
        )}

        <View style={styles.helpSection}>
          <Text style={styles.helpTitle}>–ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç?</Text>
          <Text style={styles.helpMessage}>
            –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ù–µ–π—Ä–æ—á–∞—Ç—É –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ª–∏—Ü–µ—è
          </Text>
          
          <View style={styles.helpButtons}>
            <TouchableOpacity style={styles.chatButton}>
              <Text style={styles.chatButtonIcon}>ü§ñ</Text>
              <Text style={styles.chatButtonText}>–°–ø—Ä–æ—Å–∏—Ç—å AI</Text>
            </TouchableOpacity>
            
            <TouchableOpacity style={styles.contactButton}>
              <Text style={styles.contactButtonIcon}>üìû</Text>
              <Text style={styles.contactButtonText}>–°–≤—è–∑–∞—Ç—å—Å—è</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5F5F5',
  },
  header: {
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 16,
    paddingVertical: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#EEEEEE',
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: '700',
    color: '#333333',
    marginBottom: 4,
  },
  headerSubtitle: {
    fontSize: 14,
    color: '#666666',
  },
  searchContainer: {
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#EEEEEE',
  },
  searchInputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F8F8F8',
    borderRadius: 12,
    paddingHorizontal: 12,
    borderWidth: 1,
    borderColor: '#E0E0E0',
  },
  searchIcon: {
    fontSize: 16,
    marginRight: 8,
    color: '#666666',
  },
  searchInput: {
    flex: 1,
    paddingVertical: 12,
    fontSize: 16,
    color: '#333333',
  },
  clearButton: {
    padding: 4,
  },
  clearIcon: {
    fontSize: 14,
    color: '#999999',
  },
  categoriesContainer: {
    backgroundColor: '#FFFFFF',
    borderBottomWidth: 1,
    borderBottomColor: '#EEEEEE',
  },
  categoriesList: {
    paddingHorizontal: 16,
    paddingVertical: 12,
  },
  categoryButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F8F8F8',
    borderRadius: 20,
    paddingHorizontal: 16,
    paddingVertical: 8,
    marginRight: 12,
    borderWidth: 1,
    borderColor: '#E0E0E0',
  },
  activeCategoryButton: {
    backgroundColor: '#8B2439',
    borderColor: '#8B2439',
  },
  categoryIcon: {
    fontSize: 14,
    marginRight: 6,
  },
  categoryText: {
    fontSize: 14,
    color: '#333333',
    fontWeight: '500',
  },
  activeCategoryText: {
    color: '#FFFFFF',
  },
  faqList: {
    flex: 1,
  },
  searchResults: {
    paddingHorizontal: 16,
    paddingVertical: 12,
    backgroundColor: '#E3F2FD',
    marginHorizontal: 16,
    marginTop: 16,
    borderRadius: 8,
  },
  searchResultsText: {
    fontSize: 14,
    color: '#1976D2',
    fontWeight: '500',
  },
  faqCard: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    marginHorizontal: 16,
    marginTop: 12,
    borderWidth: 1,
    borderColor: '#E0E0E0',
    overflow: 'hidden',
  },
  faqHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
  },
  faqTitleContainer: {
    flex: 1,
  },
  faqQuestion: {
    fontSize: 16,
    fontWeight: '600',
    color: '#333333',
    marginBottom: 8,
    lineHeight: 22,
  },
  faqMeta: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  faqCategory: {
    fontSize: 12,
    color: '#8B2439',
    fontWeight: '500',
    backgroundColor: '#F5F5F5',
    paddingHorizontal: 8,
    paddingVertical: 2,
    borderRadius: 8,
    marginRight: 8,
  },
  faqHelpful: {
    fontSize: 12,
    color: '#666666',
  },
  expandIcon: {
    fontSize: 16,
    color: '#666666',
    marginLeft: 12,
    transform: [{ rotate: '0deg' }],
  },
  expandIconRotated: {
    transform: [{ rotate: '180deg' }],
  },
  faqContent: {
    paddingHorizontal: 16,
    paddingBottom: 16,
    borderTopWidth: 1,
    borderTopColor: '#F0F0F0',
  },
  faqAnswer: {
    fontSize: 15,
    color: '#666666',
    lineHeight: 22,
    marginTop: 12,
    marginBottom: 16,
  },
  faqActions: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  helpfulButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F0F8F0',
    borderRadius: 20,
    paddingHorizontal: 16,
    paddingVertical: 8,
    flex: 1,
    marginRight: 8,
  },
  helpfulIcon: {
    fontSize: 14,
    marginRight: 6,
  },
  helpfulText: {
    fontSize: 14,
    color: '#4CAF50',
    fontWeight: '500',
  },
  shareButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F0F4F8',
    borderRadius: 20,
    paddingHorizontal: 16,
    paddingVertical: 8,
    flex: 1,
    marginLeft: 8,
  },
  shareIcon: {
    fontSize: 14,
    marginRight: 6,
  },
  shareText: {
    fontSize: 14,
    color: '#2196F3',
    fontWeight: '500',
  },
  emptyState: {
    alignItems: 'center',
    paddingVertical: 60,
    paddingHorizontal: 32,
  },
  emptyIcon: {
    fontSize: 48,
    marginBottom: 16,
  },
  emptyTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#333333',
    marginBottom: 8,
  },
  emptyMessage: {
    fontSize: 14,
    color: '#666666',
    textAlign: 'center',
    lineHeight: 20,
  },
  helpSection: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    marginHorizontal: 16,
    marginTop: 24,
    marginBottom: 32,
    padding: 20,
    borderWidth: 1,
    borderColor: '#E0E0E0',
    alignItems: 'center',
  },
  helpTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#333333',
    marginBottom: 8,
  },
  helpMessage: {
    fontSize: 14,
    color: '#666666',
    textAlign: 'center',
    lineHeight: 20,
    marginBottom: 20,
  },
  helpButtons: {
    flexDirection: 'row',
    width: '100%',
  },
  chatButton: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#8B2439',
    borderRadius: 12,
    paddingVertical: 12,
    marginRight: 8,
  },
  chatButtonIcon: {
    fontSize: 16,
    marginRight: 8,
  },
  chatButtonText: {
    color: '#FFFFFF',
    fontSize: 14,
    fontWeight: '600',
  },
  contactButton: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#F0F0F0',
    borderRadius: 12,
    paddingVertical: 12,
    marginLeft: 8,
  },
  contactButtonIcon: {
    fontSize: 16,
    marginRight: 8,
  },
  contactButtonText: {
    color: '#333333',
    fontSize: 14,
    fontWeight: '600',
  },
  backButton: {
    padding: 4,
  },
  backIcon: {
    fontSize: 14,
    color: '#333333',
  },
  headerContent: {
    flex: 1,
  },
})

export default FAQScreen 