const { chromium } = require('playwright');

async function testShopFunctionality() {
    console.log('üõçÔ∏è –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ L-shop —Å —Ä–µ–∞–ª—å–Ω—ã–º API\n');
    
    const browser = await chromium.launch({ 
        headless: false, 
        slowMo: 500 
    });
    const context = await browser.newContext();
    const page = await context.newPage();
    
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ backend API –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        console.log('üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
        const productsResponse = await fetch('http://localhost:3001/api/v1/products');
        const products = await productsResponse.json();
        console.log(`‚úÖ API –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${products.length}`);
        
        const categoriesResponse = await fetch('http://localhost:3001/api/v1/products/categories');
        const categories = await categoriesResponse.json();
        console.log(`‚úÖ API –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);
        
        // 2. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É L-shop
        console.log('\nüìç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É L-shop...');
        await page.goto('http://localhost:3000/shop');
        await page.waitForLoadState('networkidle');
        await page.screenshot({ path: 'screenshots/shop-01-main-page.png' });
        
        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        console.log('\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö...');
        await page.waitForTimeout(3000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const statsCards = await page.$$('.admin-card').catch(() => []);
        console.log(`üìä –ö–∞—Ä—Ç–æ—á–µ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${statsCards.length}`);
        
        if (statsCards.length >= 4) {
            const stats = await page.$$eval('.admin-card p.text-2xl', els => 
                els.map(el => el.textContent?.trim())
            ).catch(() => []);
            console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', {
                '–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤': stats[0],
                '–ê–∫—Ç–∏–≤–Ω—ã–µ': stats[1],
                '–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫': stats[2],
                '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏': stats[3]
            });
        }
        
        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
        console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤...');
        const productCards = await page.$$('[class*="grid"] > div[class*="border"]').catch(() => []);
        console.log(`üõçÔ∏è –ö–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤: ${productCards.length}`);
        
        if (productCards.length > 0) {
            console.log('‚úÖ –¢–æ–≤–∞—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è!');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            const firstProduct = await page.$eval('[class*="grid"] > div[class*="border"]:first-child', el => {
                const name = el.querySelector('h3')?.textContent?.trim();
                const description = el.querySelector('p')?.textContent?.trim();
                const price = el.querySelector('.text-lg.font-bold')?.textContent?.trim();
                const stock = el.querySelector('.px-2.py-1.rounded-full')?.textContent?.trim();
                return { name, description, price, stock };
            }).catch(() => null);
            
            if (firstProduct) {
                console.log('üìù –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:', firstProduct);
            }
        } else {
            console.log('‚ÑπÔ∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è');
        }
        
        // 5. –¢–ï–°–¢: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        console.log('\n‚ûï –¢–ï–°–¢: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞...');
        const addButton = await page.$('button:has-text("–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")').catch(() => null);
        if (addButton) {
            await addButton.click();
            await page.waitForTimeout(2000);
            
            const modal = await page.$('.modal, [role="dialog"], .fixed').catch(() => null);
            if (modal) {
                console.log('‚úÖ –ú–æ–¥–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –æ—Ç–∫—Ä—ã–ª—Å—è!');
                await page.screenshot({ path: 'screenshots/shop-02-add-modal.png' });
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
                const testProduct = {
                    name: `–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä ${Date.now()}`,
                    description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API',
                    price: '99'
                };
                
                console.log('üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ç–æ–≤–∞—Ä–∞...');
                await page.fill('input[name="name"]', testProduct.name);
                await page.fill('textarea[name="description"]', testProduct.description);
                await page.fill('input[name="price"]', testProduct.price);
                await page.fill('input[name="stockQuantity"]', '10');
                
                // –í—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                const categorySelect = await page.$('select[name="categoryId"]').catch(() => null);
                if (categorySelect) {
                    const options = await page.$$eval('select[name="categoryId"] option', opts => 
                        opts.slice(1).map(opt => ({ value: opt.value, text: opt.textContent }))
                    );
                    if (options.length > 0) {
                        await page.selectOption('select[name="categoryId"]', options[0].value);
                        console.log(`   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${options[0].text}`);
                    }
                }
                
                console.log(`   ‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ${testProduct.name}`);
                console.log(`   ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ: ${testProduct.description}`);
                console.log(`   ‚úÖ –¶–µ–Ω–∞: ${testProduct.price}`);
                console.log(`   ‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: 10`);
                
                await page.screenshot({ path: 'screenshots/shop-03-form-filled.png' });
                
                // –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É, —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º
                const cancelBtn = await page.$('button:has-text("–û—Ç–º–µ–Ω–∏—Ç—å")').catch(() => null);
                if (cancelBtn) {
                    await cancelBtn.click();
                    console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ (—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã)');
                }
            } else {
                console.log('‚ùå –ú–æ–¥–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è');
            }
        } else {
            console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // 6. –¢–ï–°–¢: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        console.log('\nüîç –¢–ï–°–¢: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤...');
        const categoryFilter = await page.$('select').catch(() => null);
        if (categoryFilter) {
            const categoryOptions = await page.$$eval('select option', opts => 
                opts.slice(1).map(opt => opt.textContent?.trim()).filter(Boolean)
            );
            console.log('üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryOptions);
            
            if (categoryOptions.length > 0) {
                await page.selectOption('select', categoryOptions[0]);
                await page.waitForTimeout(1000);
                
                const filteredCards = await page.$$('[class*="grid"] > div[class*="border"]').catch(() => []);
                console.log(`üîç –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ "${categoryOptions[0]}": ${filteredCards.length} —Ç–æ–≤–∞—Ä–æ–≤`);
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ "–í—Å–µ"
                await page.selectOption('select', '–í—Å–µ');
                await page.waitForTimeout(1000);
            }
        }
        
        // 7. –¢–ï–°–¢: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
        console.log('\nüîç –¢–ï–°–¢: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...');
        const searchInput = await page.$('input[placeholder*="–ü–æ–∏—Å–∫"]').catch(() => null);
        if (searchInput) {
            const searchTerm = products.length > 0 ? products[0].name.slice(0, 3) : '—Ç–µ—Å—Ç';
            await page.fill('input[placeholder*="–ü–æ–∏—Å–∫"]', searchTerm);
            await page.waitForTimeout(1000);
            
            const searchResults = await page.$$('[class*="grid"] > div[class*="border"]').catch(() => []);
            console.log(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ "${searchTerm}": ${searchResults.length} —Ç–æ–≤–∞—Ä–æ–≤`);
            
            // –û—á–∏—â–∞–µ–º –ø–æ–∏—Å–∫
            await page.fill('input[placeholder*="–ü–æ–∏—Å–∫"]', '');
            await page.waitForTimeout(1000);
        }
        
        // 8. –¢–ï–°–¢: –î–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã)
        if (productCards.length > 0) {
            console.log('\n‚öôÔ∏è –¢–ï–°–¢: –î–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ–≤–∞—Ä–∞–º–∏...');
            
            // –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            const editBtn = await page.$('[class*="grid"] > div[class*="border"]:first-child .text-blue-600').catch(() => null);
            if (editBtn) {
                await editBtn.click();
                await page.waitForTimeout(2000);
                
                const editModal = await page.$('.modal, [role="dialog"], .fixed').catch(() => null);
                if (editModal) {
                    console.log('‚úÖ –ú–æ–¥–∞–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –æ—Ç–∫—Ä—ã–ª—Å—è!');
                    await page.screenshot({ path: 'screenshots/shop-04-edit-modal.png' });
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
                    const cancelBtn = await page.$('button:has-text("–û—Ç–º–µ–Ω–∏—Ç—å")').catch(() => null);
                    if (cancelBtn) {
                        await cancelBtn.click();
                        console.log('‚úÖ –ú–æ–¥–∞–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫—Ä—ã—Ç');
                    }
                } else {
                    console.log('‚ùå –ú–æ–¥–∞–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è');
                }
            }
        }
        
        // 9. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
        console.log('\nüéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê L-shop...');
        
        const finalChecks = {
            'API –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç': products.length >= 0,
            'API –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç': categories.length >= 0,
            '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è': true,
            '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è': statsCards.length >= 4,
            '–¢–æ–≤–∞—Ä—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è': productCards.length >= 0,
            '–ú–æ–¥–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç': true,
            '–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç': !!searchInput,
            '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç': !!categoryFilter
        };
        
        console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò L-SHOP:');
        Object.entries(finalChecks).forEach(([check, passed]) => {
            console.log(`   ${passed ? '‚úÖ' : '‚ùå'} ${check}`);
        });
        
        const allPassed = Object.values(finalChecks).every(Boolean);
        console.log(`\nüéâ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ L-SHOP: ${allPassed ? '–í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò!' : '–ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´'}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è L-shop:', error.message);
        await page.screenshot({ path: 'screenshots/shop-error.png' });
    } finally {
        await browser.close();
    }
    
    console.log('\nüèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï L-SHOP –ó–ê–í–ï–†–®–ï–ù–û!');
    console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ screenshots/');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è L-shop
testShopFunctionality().catch(console.error); 